<?php
 defined("\102\x41\x53\x45\x50\101\124\x48") or die("\116\x6f\40\144\x69\x72\145\143\164\x20\x73\143\162\x69\x70\x74\40\141\143\x63\145\x73\x73\40\141\154\154\157\x77\x65\x64"); class Brand_model extends CI_Model { var $table = "\144\x62\x5f\x62\162\141\x6e\x64\163"; var $column_order = array(null, "\x62\x72\141\156\144\x5f\143\x6f\x64\145", "\x62\162\x61\156\144\137\x6e\x61\155\145", "\144\145\x73\143\162\151\160\x74\151\x6f\156", "\163\x74\141\164\x75\163"); var $column_search = array("\x62\162\141\156\144\137\143\x6f\x64\145", "\x62\162\x61\x6e\x64\x5f\x6e\x61\155\x65", "\144\x65\163\x63\162\151\160\x74\x69\157\156", "\163\x74\x61\164\x75\x73"); var $order = array("\151\x64" => "\x64\145\x73\143"); private function _get_datatables_query() { $this->db->from($this->table); $i = 0; foreach ($this->column_search as $item) { if ($_POST["\163\145\141\x72\x63\x68"]["\x76\141\x6c\165\145"]) { if ($i === 0) { $this->db->group_start(); $this->db->like($item, $_POST["\x73\x65\x61\162\x63\x68"]["\166\x61\x6c\x75\145"]); } else { $this->db->or_like($item, $_POST["\163\145\x61\162\143\x68"]["\166\x61\154\x75\x65"]); } if (count($this->column_search) - 1 == $i) { $this->db->group_end(); } } $i++; } if (isset($_POST["\157\x72\x64\x65\162"])) { $this->db->order_by($this->column_order[$_POST["\x6f\x72\144\145\x72"]["\x30"]["\x63\x6f\154\165\155\x6e"]], $_POST["\157\x72\144\145\162"]["\60"]["\x64\x69\x72"]); } else { if (isset($this->order)) { $order = $this->order; $this->db->order_by(key($order), $order[key($order)]); } } } function get_datatables() { $this->_get_datatables_query(); if ($_POST["\154\145\x6e\147\x74\x68"] != -1) { $this->db->limit($_POST["\x6c\x65\x6e\x67\164\x68"], $_POST["\163\x74\141\x72\x74"]); } $query = $this->db->get(); return $query->result(); } function count_filtered() { $this->_get_datatables_query(); $query = $this->db->get(); return $query->num_rows(); } public function count_all() { $this->db->from($this->table); return $this->db->count_all_results(); } public function verify_and_save() { extract($this->security->xss_clean(html_escape(array_merge($this->data, $_POST)))); $query = $this->db->query("\163\x65\154\145\143\x74\40\x2a\40\x66\x72\x6f\x6d\40\x64\x62\137\x62\162\141\156\144\163\x20\167\150\145\x72\145\x20\x75\x70\160\145\162\50\x62\162\x61\156\x64\x5f\156\141\x6d\x65\51\x3d\x75\x70\160\x65\162\50\47{$brand}\47\x29"); if ($query->num_rows() > 0) { return "\124\x68\x69\x73\40\x42\162\x61\156\x64\x20\x4e\141\155\x65\40\141\154\x72\145\x61\144\x79\40\x45\170\x69\163\x74\x2e"; } else { $qs4 = "\x73\145\x6c\x65\143\x74\x20\143\x6f\141\154\x65\163\x63\145\50\155\141\170\50\151\x64\51\54\x30\51\53\61\x20\x61\x73\x20\x6d\141\170\151\144\x20\x66\162\x6f\x6d\x20\x64\x62\137\142\x72\141\x6e\144\163"; $q1 = $this->db->query($qs4); $maxid = $q1->row()->maxid; $cat_code = "\103\x54" . str_pad($maxid, 4, "\60", STR_PAD_LEFT); $query1 = "\151\x6e\x73\x65\x72\x74\x20\151\156\164\x6f\40\x64\142\137\x62\x72\x61\x6e\x64\163\x28\142\x72\141\156\x64\137\143\x6f\144\145\x2c\142\x72\141\x6e\144\137\x6e\141\155\x65\54\144\x65\163\143\x72\x69\x70\x74\151\157\x6e\x2c\163\164\141\x74\165\163\51\x20\xa\x9\11\x9\11\x9\11\x9\11\166\141\x6c\165\145\x73\x28\x27{$cat_code}\47\x2c\47{$brand}\47\54\x27{$description}\x27\x2c\x31\x29"; if ($this->db->simple_query($query1)) { return "\x73\165\x63\143\145\x73\163"; } else { return "\146\x61\x69\154\145\144"; } } } public function get_details($id, $data) { $query = $this->db->query("\163\x65\x6c\145\143\x74\x20\x2a\x20\x66\x72\x6f\x6d\x20\x64\142\x5f\142\x72\141\156\144\163\40\167\150\x65\x72\145\x20\165\160\160\x65\162\50\x69\x64\x29\75\x75\x70\160\145\162\x28\47{$id}\47\51"); if ($query->num_rows() == 0) { show_404(); die; } else { $query = $query->row(); $data["\x71\x5f\151\x64"] = $query->id; $data["\142\162\141\156\x64\137\143\157\144\x65"] = $query->brand_code; $data["\142\x72\x61\156\144\137\156\x61\x6d\145"] = $query->brand_name; $data["\144\145\163\x63\x72\x69\160\164\x69\157\x6e"] = $query->description; return $data; } } public function update_brand() { extract($this->security->xss_clean(html_escape(array_merge($this->data, $_POST)))); $query = $this->db->query("\163\x65\x6c\145\x63\164\x20\x2a\x20\146\x72\x6f\x6d\x20\144\x62\x5f\x62\162\x61\x6e\144\x73\x20\x77\150\145\162\145\x20\165\160\x70\x65\162\50\142\x72\141\156\144\137\156\x61\155\145\x29\x3d\165\x70\x70\x65\162\x28\x27{$brand}\47\51\x20\x61\x6e\x64\x20\151\x64\x3c\76{$q_id}"); if ($query->num_rows() > 0) { return "\124\150\151\163\x20\102\162\141\x6e\x64\40\116\141\x6d\145\x20\141\154\162\145\141\x64\x79\40\x45\x78\151\163\164\56"; } else { $query1 = "\x75\x70\x64\x61\164\x65\x20\144\x62\x5f\142\162\141\x6e\x64\163\x20\163\145\164\x20\x62\x72\x61\x6e\x64\137\156\141\155\x65\x3d\x27{$brand}\47\54\x64\x65\x73\x63\x72\x69\160\x74\151\157\156\75\x27{$description}\47\x20\x77\150\145\x72\145\40\x69\x64\75{$q_id}"; if ($this->db->simple_query($query1)) { return "\163\x75\x63\x63\145\x73\163"; } else { return "\146\141\151\154\145\144"; } } } public function update_status($id, $status) { $query1 = "\x75\160\x64\x61\x74\145\x20\144\142\137\x62\x72\x61\x6e\x64\163\40\x73\145\x74\40\x73\164\x61\164\165\x73\x3d\x27{$status}\47\40\x77\x68\145\x72\145\40\151\x64\x3d{$id}"; if ($this->db->simple_query($query1)) { echo "\x73\165\143\143\x65\163\163"; } else { echo "\x66\141\x69\x6c\x65\x64"; } } public function delete_brands_from_table($ids) { if (demo_app()) { echo "\104\145\x6d\157\x20\153\150\303\264\156\147\40\143\x68\x6f\40\x70\x68\xc3\xa9\x70\x20\170\303\263\141"; return; } $query1 = "\144\x65\154\x65\164\x65\40\146\162\x6f\155\40\x64\x62\137\x62\x72\141\x6e\144\163\40\167\150\x65\x72\145\x20\x69\144\40\151\156\50{$ids}\x29"; if ($this->db->simple_query($query1)) { $this->db->query("\165\160\144\141\x74\x65\x20\144\142\x5f\151\x74\x65\155\x73\40\163\x65\x74\x20\142\162\x61\156\144\137\x69\144\75\x6e\165\x6c\x6c\40\x77\150\x65\162\145\x20\x62\x72\x61\156\144\137\151\144\40\x69\x6e\x20\x28{$ids}\51"); echo "\x73\165\x63\x63\145\x73\163"; } else { echo "\x66\x61\x69\154\x65\x64"; } } }