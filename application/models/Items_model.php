<?php
 defined("\x42\x41\x53\x45\120\x41\124\110") or die("\x4e\157\x20\x64\151\x72\x65\x63\164\40\163\143\162\151\x70\164\x20\x61\x63\x63\x65\163\163\40\141\x6c\x6c\157\x77\x65\x64"); class Items_model extends CI_Model { var $table = "\144\x62\137\x69\164\145\x6d\x73\40\x61\x73\x20\141"; var $column_order = array("\x61\x2e\x69\144", "\141\x2e\x69\x74\145\x6d\137\x69\155\141\x67\145", "\141\56\151\x74\145\155\x5f\143\157\x64\x65", "\x61\56\151\164\145\155\137\x6e\x61\155\x65", "\x62\56\143\141\164\145\147\157\x72\x79\x5f\x6e\141\x6d\x65", "\143\56\x75\156\151\x74\x5f\156\141\x6d\x65", "\x61\56\x73\164\157\143\153", "\141\x2e\x73\x61\154\x65\163\x5f\x70\x72\151\x63\x65", "\x61\56\x70\162\x69\143\x65", "\141\x2e\160\165\162\x63\150\141\163\145\137\x70\x72\x69\x63\145", "\141\x2e\x67\157\x6f\144\x5f\x70\x72\x69\143\145", "\144\56\164\141\170\x5f\x6e\141\x6d\x65", "\144\56\164\141\170", "\141\56\163\164\141\164\x75\x73", "\x65\56\x62\x72\x61\156\144\137\156\x61\155\145", "\141\56\x74\141\170\137\164\x79\x70\x65", "\x61\x2e\150\x73\x6e", "\x61\x2e\163\153\x75"); var $column_search = array("\141\x2e\x69\x64", "\x61\x2e\x69\x74\145\x6d\x5f\151\x6d\x61\x67\x65", "\x61\x2e\151\164\145\x6d\137\x63\x6f\144\x65", "\x61\56\151\164\x65\155\x5f\x6e\x61\155\x65", "\x62\56\143\141\164\x65\x67\157\162\x79\x5f\156\141\155\x65", "\143\x2e\165\156\151\x74\x5f\156\x61\x6d\145", "\141\56\x73\164\157\143\x6b", "\x61\x2e\x73\x61\x6c\145\x73\137\x70\162\151\x63\x65", "\141\x2e\160\162\x69\143\x65", "\x61\56\160\x75\162\143\x68\141\x73\145\137\160\x72\x69\x63\x65", "\141\x2e\x67\157\157\x64\x5f\160\162\151\143\145", "\144\56\164\x61\x78\137\156\x61\155\x65", "\x64\x2e\x74\x61\x78", "\141\56\x73\x74\x61\164\165\163", "\x65\56\142\162\141\x6e\144\137\156\x61\155\145", "\x61\x2e\143\x75\x73\x74\x6f\155\137\142\141\x72\143\x6f\144\145", "\141\56\x74\x61\170\x5f\x74\x79\160\x65", "\141\x2e\150\163\x6e", "\x61\x2e\163\x6b\x75"); var $order = array("\141\x2e\151\144" => "\x64\x65\163\143"); public function __construct() { parent::__construct(); } private function _get_datatables_query() { $this->db->select($this->column_order); $this->db->from($this->table); $this->db->select("\x43\101\x53\x45\x20\x57\x48\105\116\x20\145\x2e\x62\x72\x61\156\x64\137\156\x61\155\145\40\x49\x53\x20\116\x55\114\x4c\40\124\x48\105\x4e\x20\x27\x27\40\105\x4c\123\105\40\145\x2e\142\x72\141\x6e\x64\137\x6e\141\x6d\145\x20\x45\116\x44\x20\x41\x53\x20\142\162\141\156\144\x5f\156\141\x6d\x65"); $this->db->join("\144\x62\137\142\162\141\x6e\144\163\x20\141\x73\x20\145", "\145\56\x69\144\75\141\56\142\162\x61\156\144\137\151\144", "\x6c\145\x66\164"); $this->db->join("\144\x62\x5f\x63\141\164\145\147\x6f\x72\171\x20\x61\163\40\x62", "\142\56\x69\144\x3d\x61\x2e\143\x61\164\145\147\157\162\171\137\151\x64", "\154\145\x66\164"); $this->db->join("\x64\142\137\x75\x6e\x69\164\x73\x20\141\x73\x20\143", "\x63\56\x69\x64\x3d\141\x2e\x75\156\x69\x74\x5f\x69\144", "\154\145\146\164"); $this->db->join("\x64\x62\137\x74\141\x78\x20\141\163\40\x64", "\144\x2e\151\x64\75\x61\x2e\164\141\x78\137\x69\x64", "\154\145\x66\x74"); $brand_id = $this->input->post("\142\162\141\156\x64\x5f\x69\x64"); $category_id = $this->input->post("\x63\x61\164\x65\x67\157\162\x79\137\151\144"); $category_item_id = $this->input->post("\x63\x61\164\x65\x67\157\162\171\x5f\x69\164\x65\x6d\x5f\x69\144"); $kind_id = $this->input->post("\x6b\x69\156\x64\x5f\x69\x64"); if (!empty($brand_id)) { $this->db->where("\x61\56\x62\x72\141\x6e\x64\137\x69\144", $brand_id); } if (!empty($category_id)) { $this->db->where("\x61\x2e\x63\x61\x74\x65\x67\157\162\x79\x5f\x69\x64", $category_id); } if (!empty($category_item_id)) { $this->db->where("\x61\x2e\x63\x61\x74\x65\x67\x6f\162\171\137\x69\164\145\155\x5f\151\144", $category_item_id); } if (!empty($kind_id)) { $this->db->where("\141\x2e\x6b\x69\x6e\144\137\x69\144", $kind_id); } $i = 0; foreach ($this->column_search as $item) { if ($_POST["\163\x65\141\x72\143\x68"]["\x76\x61\154\x75\145"]) { if ($i === 0) { $this->db->group_start(); $this->db->like($item, $_POST["\x73\x65\141\x72\x63\x68"]["\x76\141\154\x75\x65"]); } else { $this->db->or_like($item, $_POST["\x73\x65\141\162\x63\150"]["\166\141\x6c\165\x65"]); } if (count($this->column_search) - 1 == $i) { $this->db->group_end(); } } $i++; } if (isset($_POST["\x6f\162\x64\145\162"])) { $this->db->order_by($this->column_order[$_POST["\x6f\162\x64\x65\162"]["\60"]["\x63\157\x6c\x75\x6d\156"]], $_POST["\x6f\x72\x64\145\162"]["\x30"]["\144\x69\x72"]); } else { if (isset($this->order)) { $order = $this->order; $this->db->order_by(key($order), $order[key($order)]); } } } function get_datatables() { $this->_get_datatables_query(); if ($_POST["\x6c\145\156\147\x74\150"] != -1) { $this->db->limit($_POST["\x6c\x65\x6e\x67\164\x68"], $_POST["\163\164\141\x72\x74"]); } $query = $this->db->get(); return $query->result(); } function count_filtered() { $this->_get_datatables_query(); $query = $this->db->get(); return $query->num_rows(); } public function count_all() { $this->db->from($this->table); return $this->db->count_all_results(); } public function stock_entry($entry_date, $item_id, $qty = "\60", $note = '') { $q1 = $this->db->query("\x69\x6e\x73\145\162\x74\x20\151\x6e\164\x6f\x20\144\x62\x5f\163\x74\x6f\x63\x6b\x65\156\164\x72\x79\x28\145\x6e\164\162\171\137\x64\141\164\x65\54\151\x74\x65\x6d\137\x69\144\x2c\161\x74\171\54\x73\x74\x61\164\165\163\x2c\156\x6f\164\145\x29\40\166\141\x6c\165\145\163\50\47{$entry_date}\x27\x2c{$item_id}\x2c{$qty}\x2c\61\x2c\x27{$note}\x27\51"); if (!$q1) { return false; } else { return true; } } public function verify_and_save() { extract($this->security->xss_clean(html_escape(array_merge($this->data, $_POST)))); $this->db->trans_begin(); $this->db->trans_strict(TRUE); $file_name = ''; $subdomain_ = getPathFolder(); if (!empty($_FILES["\151\164\145\x6d\137\151\x6d\141\147\145"]["\x6e\141\155\145"])) { $new_name = time(); $config["\x66\x69\154\145\x5f\x6e\141\155\x65"] = $new_name; $config["\165\x70\154\157\x61\144\x5f\160\141\x74\x68"] = "\56\x2f\165\160\154\x6f\x61\144\163\57" . $subdomain_ . "\x2f\x69\164\x65\155\x73\x2f"; $config["\141\x6c\154\157\167\x65\144\x5f\164\171\x70\x65\163"] = "\152\160\147\x7c\160\156\147\x7c\152\160\x65\x67"; $config["\x6d\141\x78\x5f\x73\151\172\145"] = 5000; $config["\x6d\x61\170\137\167\151\144\164\150"] = 5000; $config["\155\141\170\x5f\150\145\151\147\150\x74"] = 5000; $config["\x6c\157\143\141\x6c\x5f\160\x61\x74\150"] = "\x2e\x2f\165\160\154\157\141\x64\163\x2f" . $subdomain_ . "\57"; if (!is_dir($config["\x6c\x6f\x63\141\x6c\137\x70\141\164\150"])) { if (mkdir($config["\x6c\157\143\141\154\x5f\160\x61\164\150"], 493, true)) { } } if (!is_dir($config["\x75\160\154\157\141\x64\137\x70\141\x74\x68"])) { if (mkdir($config["\165\x70\154\x6f\x61\144\137\160\x61\x74\150"], 493, true)) { } else { echo "\113\x68\303\264\156\x67\x20\164\150\341\273\x83\x20\164\xe1\xba\241\157\x20\x74\150\xc6\xb0\x20\155\341\273\245\143\x2e"; } } $this->load->library("\x75\160\154\157\x61\x64", $config); if (!$this->upload->do_upload("\x69\x74\145\155\137\151\x6d\x61\x67\x65")) { $error = array("\x65\x72\x72\x6f\162" => $this->upload->display_errors()); print $error["\x65\x72\x72\x6f\x72"]; die; } else { $file_name = $this->upload->data("\146\151\154\145\x5f\156\141\155\x65"); $config["\151\155\x61\x67\145\x5f\154\x69\x62\162\141\162\x79"] = "\147\x64\62"; $config["\163\157\165\x72\x63\x65\x5f\x69\x6d\141\147\145"] = "\165\x70\154\157\x61\x64\163\57" . $subdomain_ . "\x2f\x69\x74\145\x6d\x73\57" . $file_name; $config["\143\162\145\141\x74\x65\x5f\164\150\x75\155\142"] = TRUE; $config["\x6d\x61\x69\156\164\x61\x69\x6e\x5f\162\141\164\x69\157"] = TRUE; $config["\x77\151\144\164\150"] = 500; $config["\x68\x65\x69\147\150\x74"] = 500; $this->load->library("\x69\155\x61\x67\145\137\154\151\142", $config); $this->image_lib->resize(); $item_image = $config["\x73\x6f\165\162\143\145\137\151\x6d\141\x67\145"]; } } if ($custom_barcode != '') { $query = $this->db->query("\x73\145\154\145\143\x74\40\52\x20\x66\162\157\155\40\144\142\x5f\x69\x74\x65\155\x73\40\167\x68\x65\x72\x65\40\143\165\x73\x74\157\x6d\x5f\142\141\162\143\157\x64\x65\40\x3d\40\47{$custom_barcode}\47"); if ($query->num_rows() > 0) { return "\x66\x61\151\x6c\x65\144"; } } $new_opening_stock = empty($new_opening_stock) ? 0 : $new_opening_stock; $alert_qty = empty(trim($alert_qty)) ? "\x30" : $alert_qty; $profit_margin = empty(trim($profit_margin)) ? "\x6e\x75\154\154" : $profit_margin; $expire_date = !empty(trim($expire_date)) ? date("\x59\x2d\155\55\x64", strtotime($expire_date)) : null; if (empty($discount)) { $discount = 0; } if (empty($kind_id)) { $kind_id = 0; } if (empty($kitchen_id)) { $kitchen_id = 0; } if (empty($guaran_id)) { $guaran_id = 0; } if (empty($category_item_id)) { $category_item_id = 0; } if (empty($brand_id)) { $brand_id = 0; } $print_tem = isset($print_tem) ? 1 : 0; $query1 = "\x69\x6e\x73\145\162\x74\x20\x69\x6e\164\157\40\144\142\x5f\x69\164\x65\155\163\50\144\x65\x73\143\x72\x69\160\164\151\157\156\x2c\151\x74\145\155\x5f\x63\x6f\x64\x65\x2c\x69\164\145\155\137\156\141\155\x65\x2c\142\162\141\x6e\x64\x5f\151\144\54\143\141\164\145\147\x6f\x72\x79\137\x69\x64\54\x73\x6b\x75\54\x68\163\156\54\165\x6e\151\x74\137\x69\x64\54\x6b\x69\164\143\150\145\x6e\x5f\151\144\x2c\147\x75\x61\x72\x61\x6e\x5f\x69\x64\x2c\141\x6c\x65\162\x74\x5f\161\x74\171\54\154\x6f\x74\137\x6e\x75\x6d\142\x65\162\x2c\x65\170\x70\x69\x72\145\137\x64\141\164\x65\54\12\11\x9\x9\11\11\x9\x9\x9\x9\160\162\151\x63\145\x2c\164\141\x78\x5f\x69\144\54\160\165\162\x63\150\x61\x73\x65\x5f\160\162\x69\x63\145\x2c\x74\x61\170\x5f\x74\171\160\x65\x2c\x70\x72\x6f\x66\x69\164\x5f\155\x61\x72\147\x69\156\x2c\xa\x9\11\11\x9\11\11\x9\11\11\163\x61\154\x65\163\x5f\160\162\151\143\145\54\x63\165\163\164\157\155\x5f\142\141\x72\143\157\x64\145\x2c\x66\x69\x6e\x61\154\x5f\x70\x72\x69\143\x65\x2c\12\11\x9\x9\x9\11\x9\11\11\x9\x73\x79\x73\x74\145\x6d\x5f\x69\160\x2c\163\x79\x73\x74\x65\x6d\x5f\156\x61\155\145\54\143\162\x65\x61\x74\145\x64\x5f\144\141\x74\x65\54\x63\x72\145\141\x74\145\x64\137\164\x69\155\145\x2c\143\x72\145\141\164\145\144\137\x62\x79\x2c\x73\x74\141\164\x75\x73\54\144\x69\x73\x63\157\165\156\164\x5f\x74\171\x70\145\x2c\144\151\163\143\157\165\156\164\x2c\143\141\x74\x65\147\x6f\162\171\137\x69\x74\145\155\x5f\x69\x64\54\153\x69\156\144\137\151\x64\54\x67\x6f\157\x64\137\160\x72\x69\143\x65\x2c\160\x72\x69\156\x74\137\164\x65\x6d\51\xa\12\x9\11\x9\x9\x9\11\x9\x76\141\x6c\165\145\x73\50\x27{$description}\x27\54\47{$item_code}\47\x2c\47{$item_name}\x27\x2c\47{$brand_id}\47\x2c\x27{$category_id}\x27\54\47{$sku}\x27\x2c\x27{$hsn}\47\x2c\47{$unit_id}\x27\x2c\x27{$kitchen_id}\x27\54\47{$guaran_id}\47\54\x27{$alert_qty}\47\54\x27{$lot_number}\x27\54\47{$expire_date}\47\54\12\11\11\11\11\11\11\11\11\11\x27{$price}\x27\54\47{$tax_id}\47\54\x27{$purchase_price}\47\54\47{$tax_type}\x27\x2c{$profit_margin}\54\12\x9\11\11\11\11\x9\11\x9\11\47{$sales_price}\x27\54\47{$custom_barcode}\47\x2c\x27{$final_price}\x27\x2c\12\x9\11\11\11\x9\x9\x9\11\11\x27{$SYSTEM_IP}\x27\x2c\x27{$SYSTEM_NAME}\47\x2c\47{$CUR_DATE}\47\54\x27{$CUR_TIME}\47\x2c\47{$CUR_USERNAME}\x27\54\61\x2c\x27{$discount_type}\47\54\47{$discount}\47\x2c\x27{$category_item_id}\x27\x2c\x27{$kind_id}\x27\54\x27{$good_price}\x27\54\47{$print_tem}\47\51"; $query1 = $this->db->simple_query($query1); if (!$query1) { return "\146\141\x69\154\x65\x64"; } $item_id = $this->db->insert_id(); if (!empty($new_opening_stock) && $new_opening_stock != 0) { $q1 = $this->stock_entry($CUR_DATE, $item_id, $new_opening_stock, $adjustment_note); if (!$q1) { return "\x66\141\151\x6c\x65\x64"; } } $this->load->model("\160\x6f\x73\137\x6d\157\144\x65\154"); $q6 = $this->pos_model->update_items_quantity($item_id); if (!$q6) { return "\x66\141\151\x6c\x65\144"; } if ($query1) { if (!empty($file_name)) { $q1 = $this->db->query("\165\x70\x64\x61\164\x65\x20\x64\142\x5f\x69\x74\145\x6d\x73\40\x73\x65\x74\x20\x69\x74\145\x6d\x5f\151\155\141\147\145\40\x3d\47{$item_image}\47\40\x77\x68\145\x72\x65\40\151\144\x3d" . $item_id); } $this->db->query("\165\x70\144\x61\164\145\x20\x64\142\x5f\x69\164\x65\155\163\x20\163\x65\x74\40\x65\170\160\x69\x72\145\137\x64\141\164\145\x3d\x6e\165\x6c\154\x20\x77\150\145\162\145\x20\x65\x78\x70\x69\162\x65\x5f\144\141\164\145\x3d\x27\x30\60\x30\60\55\60\x30\x2d\60\x30\x27"); $this->db->trans_commit(); return "\163\165\143\143\x65\x73\163"; } else { $this->db->trans_rollback(); return "\146\x61\151\x6c\145\144"; } } public function get_details($id, $data) { $query = $this->db->query("\163\145\x6c\145\x63\164\x20\x2a\x20\146\x72\157\x6d\40\144\142\137\151\x74\x65\155\x73\40\x77\x68\x65\x72\145\40\165\x70\x70\145\162\50\151\144\x29\x3d\165\x70\160\145\162\x28\x27{$id}\47\51"); if ($query->num_rows() == 0) { show_404(); die; } else { $query = $query->row(); $data["\161\x5f\151\x64"] = $query->id; $data["\151\164\x65\155\x5f\143\157\x64\145"] = $query->item_code; $data["\151\164\x65\x6d\x5f\x6e\x61\x6d\x65"] = $query->item_name; $data["\144\x65\x73\x63\162\151\160\x74\x69\157\156"] = $query->description; $data["\142\x72\x61\156\x64\x5f\151\144"] = $query->brand_id; $data["\143\141\164\x65\147\157\x72\171\137\151\144"] = $query->category_id; $data["\143\x61\164\145\147\x6f\x72\171\x5f\151\x74\x65\x6d\137\151\x64"] = $query->category_item_id; $data["\153\151\x6e\144\137\151\x64"] = $query->kind_id; $data["\163\153\x75"] = $query->sku; $data["\x68\x73\x6e"] = $query->hsn; $data["\165\156\x69\164\x5f\151\144"] = $query->unit_id; $data["\153\151\164\x63\x68\x65\156\137\151\144"] = $query->kitchen_id; $data["\147\x75\x61\x72\x61\x6e\137\x69\x64"] = $query->guaran_id; $data["\x61\154\145\162\164\x5f\x71\164\171"] = $query->alert_qty; $data["\x70\162\x69\143\145"] = $query->price; $data["\164\141\x78\137\151\x64"] = $query->tax_id; $data["\x70\165\162\143\x68\141\163\x65\137\x70\162\x69\x63\x65"] = $query->purchase_price; $data["\164\x61\170\x5f\164\171\x70\145"] = $query->tax_type; $data["\160\x72\x6f\146\151\x74\x5f\155\141\x72\147\x69\x6e"] = $query->profit_margin; $data["\163\x61\154\145\x73\x5f\x70\162\x69\143\145"] = $query->sales_price; $data["\x67\x6f\x6f\144\137\x70\162\151\x63\145"] = $query->good_price; $data["\146\x69\156\x61\x6c\137\160\x72\151\143\145"] = $query->final_price; $data["\163\164\x6f\x63\x6b"] = $query->stock; $data["\154\x6f\x74\x5f\156\x75\x6d\142\145\162"] = $query->lot_number; $data["\x63\165\x73\164\157\155\137\142\x61\x72\x63\157\x64\x65"] = $query->custom_barcode; $data["\144\x69\x73\x63\157\x75\x6e\164"] = $query->discount; $data["\144\x69\x73\x63\157\165\156\164\x5f\164\171\x70\145"] = $query->discount_type; $data["\x70\162\x69\x6e\x74\137\164\145\x6d"] = $query->print_tem; $data["\x65\x78\x70\151\162\x65\137\144\x61\164\145"] = !empty($query->expire_date) ? show_date($query->expire_date) : ''; return $data; } } public function update_items() { extract($this->security->xss_clean(html_escape(array_merge($this->data, $_POST)))); $this->db->trans_begin(); $subdomain_ = getPathFolder(); $file_name = $item_image = ''; if (!empty($_FILES["\151\x74\145\x6d\137\151\x6d\x61\147\x65"]["\156\x61\x6d\145"])) { $new_name = time(); $config["\x66\151\154\x65\137\x6e\141\155\x65"] = $new_name; $config["\x75\160\154\x6f\141\x64\137\160\141\164\150"] = "\x2e\x2f\x75\160\x6c\157\x61\144\x73\x2f" . $subdomain_ . "\x2f\x69\x74\145\x6d\163\57"; $config["\141\154\154\x6f\x77\x65\x64\137\x74\171\160\x65\163"] = "\152\x70\147\x7c\x70\x6e\x67"; $config["\155\x61\170\x5f\163\x69\x7a\145"] = 5000; $config["\x6d\141\170\137\x77\x69\144\164\150"] = 5000; $config["\x6d\x61\170\x5f\x68\145\x69\147\x68\x74"] = 5000; $config["\x6c\157\143\141\154\137\160\x61\x74\150"] = "\x2e\x2f\165\160\154\x6f\x61\x64\x73\57" . $subdomain_ . "\x2f"; if (!is_dir($config["\x6c\157\x63\141\x6c\x5f\160\x61\x74\x68"])) { if (mkdir($config["\154\x6f\143\141\x6c\x5f\x70\141\x74\x68"], 493, true)) { } } if (!is_dir($config["\x75\160\154\157\141\144\x5f\160\x61\x74\150"])) { if (mkdir($config["\x75\x70\154\157\x61\x64\x5f\160\x61\164\x68"], 493, true)) { } } $this->load->library("\x75\160\154\x6f\141\x64", $config); if (!$this->upload->do_upload("\151\164\145\155\x5f\151\x6d\141\x67\x65")) { $error = array("\x65\x72\162\157\162" => $this->upload->display_errors()); print $error["\x65\162\162\x6f\162"]; die; } else { $file_name = $this->upload->data("\x66\151\x6c\x65\137\x6e\141\155\145"); $config["\x69\155\x61\147\x65\137\154\151\x62\x72\141\162\x79"] = "\x67\x64\x32"; $config["\163\157\x75\162\143\x65\137\151\155\x61\x67\145"] = "\165\160\x6c\157\x61\x64\163\57" . $subdomain_ . "\57\151\164\x65\155\163\x2f" . $file_name; $config["\143\x72\x65\x61\164\145\x5f\x74\150\x75\x6d\x62"] = TRUE; $config["\155\141\x69\156\x74\141\x69\x6e\x5f\x72\x61\x74\x69\x6f"] = TRUE; $config["\167\151\x64\164\150"] = 500; $config["\150\145\151\x67\x68\x74"] = 500; $this->load->library("\151\155\x61\147\x65\x5f\154\x69\142", $config); $this->image_lib->resize(); $item_image = $config["\163\157\165\162\x63\x65\137\151\x6d\141\x67\x65"]; } } $alert_qty = empty(trim($alert_qty)) ? "\60" : $alert_qty; $profit_margin = empty(trim($profit_margin)) ? "\x6e\165\x6c\x6c" : $profit_margin; $expire_date = !empty(trim($expire_date)) ? date("\x59\55\x6d\55\144", strtotime($expire_date)) : "\156\165\x6c\154"; if (empty($discount)) { $discount = 0; } if ($custom_barcode != '') { $query = $this->db->query("\x73\x65\154\145\143\164\40\x2a\40\146\x72\157\x6d\x20\x64\x62\137\151\164\x65\x6d\163\40\167\x68\x65\162\x65\x20\143\165\x73\x74\x6f\155\x5f\x62\x61\x72\143\157\x64\145\40\75\x20\47{$custom_barcode}\x27\x20\141\x6e\144\40\x69\x64\x20\x3c\x3e\x20{$q_id}"); if ($query->num_rows() > 0) { return "\146\141\x69\x6c\x65\x64"; } } $print_tem = isset($print_tem) ? 1 : 0; $query1 = "\x75\x70\x64\x61\164\x65\x20\x64\x62\x5f\x69\164\145\x6d\163\40\x73\x65\164\40\xa\11\11\x9\11\11\x9\151\164\145\x6d\x5f\156\x61\x6d\145\x3d\47{$item_name}\47\x2c\xa\11\x9\x9\11\11\11\x69\x74\x65\x6d\x5f\x63\x6f\144\145\75\x27{$item_code}\47\x2c\12\11\x9\x9\11\x9\11\144\145\x73\143\162\x69\160\x74\x69\x6f\156\75\x27{$description}\47\54\12\11\x9\11\x9\11\11\142\162\x61\156\x64\137\151\x64\x3d\x27{$brand_id}\47\54\12\x9\x9\x9\11\x9\x9\x63\141\164\x65\x67\157\162\171\x5f\x69\x64\x3d\47{$category_id}\47\54\12\x9\x9\x9\11\11\x9\x63\141\164\145\147\x6f\x72\x79\137\x69\x74\x65\x6d\x5f\151\144\75\x27{$category_item_id}\x27\54\xa\11\x9\11\x9\11\11\x6b\x69\156\144\137\151\144\x3d\x27{$kind_id}\x27\x2c\12\x9\11\11\x9\11\11\x73\153\x75\75\47{$sku}\47\54\xa\11\x9\x9\11\11\11\150\163\x6e\75\47{$hsn}\47\54\xa\x9\11\x9\x9\11\11\165\156\151\164\x5f\x69\144\x3d\x27{$unit_id}\x27\x2c\12\x9\11\11\11\11\x9\153\151\164\x63\x68\145\x6e\137\151\x64\x3d\x27{$kitchen_id}\x27\54\12\x9\11\x9\x9\11\x9\x67\165\141\162\141\x6e\137\x69\144\x3d\x27{$guaran_id}\47\54\12\x9\x9\x9\11\11\11\x61\154\145\162\x74\137\161\164\171\x3d\x27{$alert_qty}\x27\54\xa\11\11\x9\11\11\x9\x6c\x6f\x74\x5f\156\x75\155\x62\145\162\x3d\x27{$lot_number}\47\x2c\12\11\11\11\x9\11\x9\145\170\x70\x69\162\145\x5f\x64\x61\x74\x65\x3d\47{$expire_date}\x27\x2c\12\x9\x9\x9\x9\11\x9\143\165\163\x74\157\x6d\137\x62\x61\x72\x63\157\x64\x65\x3d\x27{$custom_barcode}\47\x2c\xa\x9\x9\x9\11\11\11\x70\162\151\x63\145\75\x27{$price}\47\x2c\12\x9\11\x9\x9\x9\x9\164\141\x78\137\x69\x64\x3d\47{$tax_id}\47\54\12\x9\11\11\11\11\11\x70\165\162\x63\150\141\x73\145\x5f\x70\x72\x69\x63\145\75\x27{$purchase_price}\x27\x2c\12\11\x9\11\11\x9\x9\x74\141\170\x5f\164\171\160\145\75\x27{$tax_type}\47\54\xa\x9\x9\11\x9\x9\11\x70\x72\157\146\151\164\x5f\155\141\162\x67\x69\x6e\x3d{$profit_margin}\54\12\x9\11\x9\x9\11\11\x73\141\x6c\x65\x73\x5f\160\x72\151\143\145\75\x27{$sales_price}\x27\54\12\11\x9\x9\11\11\11\x64\151\x73\x63\x6f\165\x6e\x74\x3d\47{$discount}\x27\54\12\11\11\11\11\11\x9\144\151\x73\143\157\165\156\164\x5f\164\171\x70\145\75\47{$discount_type}\x27\54\xa\x9\x9\11\x9\11\x9\x66\x69\156\x61\x6c\137\x70\x72\x69\143\145\75\47{$final_price}\47\54\12\11\11\x9\x9\11\11\151\164\x65\155\137\x69\155\141\147\x65\75\40\x27{$item_image}\x27\x20\54\xa\11\x9\11\x9\11\x9\x67\x6f\x6f\144\137\x70\162\151\143\145\x3d\x20\47{$good_price}\x27\x20\54\xa\x9\11\11\x9\x9\x9\x70\x72\151\x6e\x74\137\x74\x65\x6d\75\40\47{$print_tem}\x27\x20\12\x9\x9\x9\x9\x9\x9\x77\x68\145\x72\x65\40\151\x64\75{$q_id}"; $query1 = $this->db->query($query1); if (!$query1) { return "\146\141\x69\154\145\x64"; } if (!empty($new_opening_stock) && $new_opening_stock != 0) { $q1 = $this->stock_entry($CUR_DATE, $q_id, $new_opening_stock, $adjustment_note); if (!$q1) { return "\x66\141\x69\154\x65\144"; } } $this->load->model("\160\157\x73\x5f\x6d\157\144\145\154"); $q6 = $this->pos_model->update_items_quantity($q_id); if (!$q6) { return "\x66\x61\151\x6c\x65\144"; } if ($query1) { $this->db->query("\165\160\144\x61\x74\145\x20\x64\x62\x5f\x69\x74\x65\155\163\x20\163\x65\164\x20\x65\170\x70\x69\162\145\137\144\x61\164\145\75\x6e\165\154\x6c\40\167\x68\145\162\x65\x20\x65\x78\160\151\x72\145\x5f\x64\x61\x74\x65\75\47\60\x30\60\60\x2d\x30\x30\x2d\x30\x30\47"); $this->db->trans_commit(); return "\x73\x75\x63\143\145\163\x73"; } else { $this->db->trans_rollback(); return "\x66\x61\151\154\145\x64"; } } public function update_status($id, $status) { $query1 = "\165\x70\x64\x61\x74\x65\40\x64\142\x5f\x69\164\145\155\163\40\163\145\164\40\x73\164\141\164\165\163\x3d\x27{$status}\47\x20\x77\x68\145\x72\x65\x20\x69\x64\x3d{$id}"; if ($this->db->simple_query($query1)) { echo "\x73\165\143\x63\x65\163\163"; } else { echo "\146\141\151\x6c\x65\144"; } } public function delete_items_from_table($ids) { if (demo_app()) { echo "\104\145\x6d\157\40\x6b\150\303\264\156\x67\40\x63\x68\157\40\x70\150\303\251\160\40\170\xc3\xb3\x61"; return; } $this->db->trans_begin(); $q1 = $this->db->query("\144\x65\x6c\x65\x74\x65\40\146\x72\x6f\155\x20\x64\x62\137\151\x74\145\155\163\40\x77\x68\145\x72\145\40\151\144\x20\151\156\50{$ids}\x29"); $q2 = $this->db->query("\x64\x65\x6c\x65\164\x65\x20\x66\162\157\x6d\40\x64\142\137\x73\164\x6f\143\x6b\145\156\164\x72\171\x20\x77\x68\145\x72\145\x20\151\x74\x65\155\137\151\144\x20\151\156\x28{$ids}\x29"); if ($q1 && $q2) { $this->db->trans_commit(); echo "\163\x75\x63\143\145\x73\163"; } else { echo "\x66\x61\x69\x6c\145\x64"; } } public function inclusive($price = '', $tax_per) { return $price / ($tax_per / 100 + 1) / 10; } public function get_purchase_items_info($rowcount, $item_id, $purchase_qty) { $q1 = $this->db->select("\x2a")->from("\144\142\137\x69\164\145\155\x73")->where("\151\x64\x3d{$item_id}")->get(); $tax = $this->db->query("\x73\x65\154\145\143\164\40\x74\x61\170\40\x66\x72\x6f\x6d\40\x64\x62\137\164\141\x78\40\x77\x68\x65\x72\x65\40\x69\x64\75" . $q1->row()->tax_id)->row()->tax; $info["\151\x74\145\155\137\x69\144"] = $q1->row()->id; $info["\151\164\145\x6d\x5f\x6e\141\155\x65"] = $q1->row()->item_name; $info["\151\x74\145\155\137\x61\166\x61\x69\154\x61\142\154\145\137\x71\164\171"] = $q1->row()->stock; $info["\151\x74\145\155\137\163\x61\x6c\x65\163\137\161\164\171"] = $purchase_qty; return $this->return_row_with_data($rowcount, $info); } public function get_items_info($rowcount, $item_id) { $q1 = $this->db->select("\x2a")->from("\x64\142\x5f\x69\164\x65\x6d\163")->where("\151\x64\x3d{$item_id}")->get(); $tax = $this->db->query("\163\145\154\145\x63\164\40\164\141\x78\x20\146\162\157\155\x20\144\x62\x5f\x74\x61\170\x20\x77\150\x65\162\x65\x20\151\144\x3d" . $q1->row()->tax_id)->row()->tax; $info["\x69\x74\x65\x6d\x5f\151\x64"] = $q1->row()->id; $info["\151\164\x65\x6d\137\156\141\x6d\x65"] = $q1->row()->item_name; $info["\x69\164\x65\155\x5f\141\166\x61\x69\154\x61\142\x6c\145\137\161\x74\171"] = $q1->row()->stock; $info["\x69\164\x65\155\137\163\141\x6c\145\x73\x5f\x71\x74\171"] = 1; $this->return_row_with_data($rowcount, $info); } public function return_row_with_data($rowcount, $info) { extract($info); ?>
		<tr id="row_<?php  echo $rowcount; ?>
" data-row='<?php  echo $rowcount; ?>
'>
			<td id="td_<?php  echo $rowcount; ?>
_1">
				<!-- item name  -->
				<input type="text" style="font-weight: bold;" id="td_data_<?php  echo $rowcount; ?>
_1" class="form-control no-padding"
					value='<?php  echo $item_name; ?>
' readonly>
			</td>
			<!-- Qty -->
			<td id="td_<?php  echo $rowcount; ?>
_3">
				<div class="input-group ">
					<span class="input-group-btn">
						<button onclick="decrement_qty(<?php  echo $rowcount; ?>
)" type="button" class="btn btn-default btn-flat"><i
								class="fa fa-minus text-danger"></i></button></span>
					<input typ="text" value="<?php  echo $item_sales_qty; ?>
" class="form-control no-padding text-center"
						onkeyup="calculate_tax(<?php  echo $rowcount; ?>
)" id="td_data_<?php  echo $rowcount; ?>
_3"
						name="td_data_<?php  echo $rowcount; ?>
_3">
					<span class="input-group-btn">
						<button onclick="increment_qty(<?php  echo $rowcount; ?>
)" type="button" class="btn btn-default btn-flat"><i
								class="fa fa-plus text-success"></i></button></span>
				</div>
			</td>

			<!-- Remove button -->
			<td id="td_<?php  echo $rowcount; ?>
_16" style="text-align: center;">
				<a class=" fa fa-fw fa-minus-square text-red" style="cursor: pointer;font-size: 34px;"
					onclick="removerow(<?php  echo $rowcount; ?>
)" title="Delete ?" name="td_data_<?php  echo $rowcount; ?>
_16"
					id="td_data_<?php  echo $rowcount; ?>
_16"></a>
			</td>
			<input type="hidden" id="tr_available_qty_<?php  echo $rowcount; ?>
_13" value="<?php  echo $item_available_qty; ?>
">
			<input type="hidden" id="tr_item_id_<?php  echo $rowcount; ?>
" name="tr_item_id_<?php  echo $rowcount; ?>
" value="<?php  echo $item_id; ?>
">
		</tr>
		<?php  } public function xss_html_filter($input) { return $this->security->xss_clean(html_escape($input)); } public function preview_labels() { $CI =& get_instance(); $rowcount = $this->input->post("\150\x69\144\144\145\156\137\162\157\x77\143\x6f\x75\156\164"); $is_roll_paper = true; $page_break = isset($is_roll_paper) && !empty($is_roll_paper) ? "\x70\141\x67\145\55\142\162\x65\x61\153\55\x61\x66\x74\145\x72\x3a\40\x61\154\x77\141\171\163\73" : ''; ?>
    <div style="width: 35mm !important; line-height: 16px !important;">
        <div style="width: 35mm !important; line-height: 16px !important;">
            <div >
                <?php  $label_width = 35; $label_height = 22; $label_margin = 2; for ($i = 1; $i <= $rowcount; $i++) { if (isset($_POST["\164\x72\137\x69\164\145\x6d\137\x69\x64\137" . $i]) && !empty($_POST["\164\162\x5f\151\164\145\155\137\151\144\137" . $i])) { $item_id = $this->xss_html_filter(trim($_POST["\164\162\137\x69\164\x65\155\137\x69\x64\137" . $i])); $item_count = $this->xss_html_filter(trim($_POST["\x74\x64\137\x64\141\164\x61\x5f" . $i . "\137\63"])); $res1 = $this->db->query("\163\x65\x6c\x65\x63\164\x20\x2a\40\146\162\x6f\x6d\x20\144\x62\x5f\151\x74\x65\x6d\x73\40\x77\150\x65\x72\x65\40\151\x64\75{$item_id}")->row(); $item_name = $res1->item_name; $item_code = !empty($res1->custom_barcode) ? $res1->custom_barcode : $res1->item_code; $item_price = $res1->sales_price; for ($j = 1; $j <= $item_count; $j++) { ?>
                            <div style="height: <?php  echo $label_height; ?>
mm !important; line-height: <?php  echo $label_height; ?>
mm; width: <?php  echo $label_width; ?>
mm !important; display: inline-block; text-align: center; <?php  echo $page_break; ?>
; margin-bottom: <?php  echo $label_margin; ?>
mm;" class="label_border">
                                <div style="display: inline-block; vertical-align: middle; line-height: 16px !important;">
                                    <span style="display: block !important">
                                        <?php  echo $item_name; ?>
                                    </span>
                                    <b>Price:</b>
                                    <span>
                                        <?php  echo $CI->currency(app_number_format($item_price)); ?>
                                    </span>
                                    <img class="center-block" style="max-height: 8.89mm !important; width: 100%; opacity: 1.0" src="<?php  echo base_url(); ?>
barcode/<?php  echo $item_code . "\57" . rand(); ?>
">
                                </div>
                            </div>
                            <?php  } } } ?>
            </div>
        </div>
    </div>
    <?php  } public function preview_labels_full() { $print_type = $this->input->post("\160\x72\x69\156\164\x5f\164\x79\x70\x65"); if ($print_type == "\x30") { $this->preview_labels(); return; } else { if ($print_type == "\61") { $this->preview_labels_double_column(); return; } else { if ($print_type == "\x32") { $this->preview_labels_double_column_74_22(); return; } else { if ($print_type == "\63") { $this->preview_labels_double_column(); return; } else { $this->preview_labels_double_column(); return; } } } } } public function preview_labels_double_column() { $CI =& get_instance(); $company_name = $this->db->query("\163\x65\x6c\x65\x63\164\x20\x63\x6f\155\160\141\156\x79\137\156\141\155\x65\40\x66\x72\x6f\x6d\x20\144\142\137\x63\x6f\x6d\x70\x61\x6e\x79")->row()->company_name; $rowcount = $this->input->post("\150\151\x64\x64\x65\x6e\x5f\162\x6f\x77\x63\157\x75\156\x74"); ?>
		<div style=" height:11in !important;  width:8.5in !important; line-height: 16px !important;">
			<div class="inner-div-2" style=" height:11in !important;  width:8.5in !important; line-height: 16px !important;">
				<div style="">

					<?php  for ($i = 1; $i <= $rowcount; $i++) { if (isset($_POST["\x74\162\x5f\x69\164\x65\x6d\137\x69\x64\137" . $i]) && !empty($_POST["\x74\162\x5f\x69\x74\x65\x6d\137\x69\144\x5f" . $i])) { $item_id = $this->xss_html_filter(trim($_POST["\x74\162\137\x69\164\x65\155\137\151\x64\137" . $i])); $item_count = $this->xss_html_filter(trim($_POST["\x74\x64\x5f\x64\141\164\141\137" . $i . "\137\63"])); $res1 = $this->db->query("\x73\x65\154\145\x63\164\40\52\40\x66\162\157\155\40\x64\142\x5f\x69\x74\145\155\x73\40\167\x68\x65\162\145\40\151\x64\x3d{$item_id}")->row(); $item_name = $res1->item_name; $item_code = !empty($res1->custom_barcode) ? $res1->custom_barcode : $res1->item_code; $item_price = $res1->sales_price; for ($j = 1; $j <= $item_count; $j++) { ?>
								<div style="height:1in !important; line-height: 1in; width:3.6375in !important; display: inline-block;  "
									class="label_border text-center">
									<div style="display:inline-block;vertical-align:middle;line-height:16px !important;">
										<!-- <b style="display: block !important" class="text-uppercase">
											<?php  echo $company_name; ?>
										</b> -->
										<span style="display: block !important">
											<?php  echo $item_name; ?>
										</span>
										<b>Price:</b>
										<span>
											<?php  echo $CI->currency($item_price); ?>
										</span>
										<img class="center-block" style="max-height: 0.35in !important; width: 100%; opacity: 1.0"
											src="<?php  echo base_url(); ?>
barcode/<?php  echo $item_code; ?>
">

									</div>
								</div>
								<?php  } } } ?>


				</div>
			</div>
		</div>
		<?php  } public function preview_labels_double_column_74_22() { $CI =& get_instance(); $company_name = $this->db->query("\x53\105\x4c\x45\x43\124\x20\x63\x6f\155\160\141\156\x79\137\156\x61\155\145\x20\106\x52\x4f\x4d\x20\x64\x62\x5f\143\x6f\x6d\x70\x61\x6e\171")->row()->company_name; $rowcount = $this->input->post("\150\151\x64\144\145\156\x5f\162\157\167\x63\157\x75\156\164"); ?>


		<div style="width: 74mm !important; line-height: 16px !important;">
			<div class="inner-div-2" style=" width: 74mm !important; line-height: 16px !important;">
				<div style="">

					<?php  for ($i = 1; $i <= $rowcount; $i++) { if (isset($_POST["\x74\162\137\151\x74\x65\155\x5f\151\x64\x5f" . $i]) && !empty($_POST["\x74\x72\137\x69\164\x65\155\137\x69\x64\x5f" . $i])) { $item_id = $this->xss_html_filter(trim($_POST["\x74\162\137\x69\164\x65\155\137\x69\x64\x5f" . $i])); $item_count = $this->xss_html_filter(trim($_POST["\164\144\137\144\x61\164\x61\x5f" . $i . "\x5f\x33"])); $res1 = $this->db->query("\123\x45\114\x45\x43\124\x20\x2a\40\106\122\x4f\x4d\40\144\142\x5f\x69\x74\145\155\163\40\x57\110\105\122\x45\x20\x69\144\x3d{$item_id}")->row(); $item_name = $res1->item_name; $item_code = !empty($res1->custom_barcode) ? $res1->custom_barcode : $res1->item_code; $item_price = $res1->sales_price; for ($j = 1; $j <= $item_count; $j++) { ?>
								<div style="height: 22mm !important; line-height: 22mm; width: 35mm !important; display: inline-block;"
									class="label_border text-center">
									<div style="display: inline-block; vertical-align: middle; line-height: 16px !important;">

										<span style="display: block !important">
											<?php  echo $item_name; ?>
										</span>


										<img class="center-block" style="max-height: 7.0866mm !important; width: 100%; opacity: 1.0"
											src="<?php  echo base_url(); ?>
barcode/<?php  echo $item_code; ?>
">
										<span>
											<b>
												<?php  echo $CI->currency(app_number_format($item_price)); ?>
											</b>
										</span>

									</div>
								</div>
								<?php  } } } ?>

				</div>
			</div>
		</div>
		<?php  } public function pdf($html) { mb_internal_encoding("\x55\x54\x46\55\70"); $html = $this->output->get_output(); $this->load->library("\x70\x64\x66"); $this->dompdf->loadHtml($html); $this->dompdf->render(); $this->dompdf->stream("\157\x75\x74\x70\x75\x74\x2e\x70\144\146", array("\x41\164\164\x61\x63\150\x6d\145\x6e\x74" => 0)); } public function delete_stock_entry($entry_id) { if (demo_app()) { echo "\x44\x65\155\157\x20\x6b\x68\303\264\x6e\147\40\143\x68\x6f\x20\x70\x68\303\251\x70\x20\x78\303\xb3\x61"; return; } $item_id = $this->input->post("\151\164\145\x6d\137\x69\x64"); $this->db->trans_begin(); $q1 = $this->db->query("\144\145\x6c\x65\164\145\40\x66\162\x6f\155\40\x64\142\137\163\x74\x6f\x63\153\x65\156\x74\162\x79\x20\x77\150\x65\162\145\40\151\144\75{$entry_id}"); if (!$q1) { return "\146\x61\151\154\145\x64"; } $this->load->model("\160\x6f\x73\x5f\155\x6f\x64\145\x6c"); $q6 = $this->pos_model->update_items_quantity($item_id); if (!$q6) { return "\146\x61\151\154\x65\144"; } $this->db->trans_commit(); return "\x73\x75\143\143\145\163\x73"; } public function getItemsArray($id = '') { $q = ''; $this->db->select("\x69\144\54\40\x69\x74\145\x6d\137\156\141\x6d\145\54\x20\x69\164\145\155\137\143\157\x64\x65")->from("\x64\x62\137\151\x74\145\x6d\163"); if (isset($_REQUEST["\x63\x61\164\145\147\x6f\162\x79\x5f\x69\x64"]) && !empty($_REQUEST["\x63\141\164\145\x67\x6f\x72\x79\137\151\144"])) { $this->db->where("\143\141\164\x65\147\x6f\162\171\x5f\x69\x64", $_REQUEST["\x63\x61\164\145\x67\x6f\162\171\x5f\151\x64"]); } if (isset($_REQUEST["\151\164\145\x6d\137\x74\x79\x70\145"]) && !empty($_REQUEST["\x69\x74\145\x6d\137\x74\x79\160\x65"])) { $service_bit = $_REQUEST["\x69\x74\145\x6d\x5f\164\x79\160\145"] == "\x53\145\162\x76\x69\143\145\163" ? 1 : 0; $this->db->where("\163\145\x72\166\151\x63\x65\x5f\x62\x69\164", $service_bit); } if (!empty($id)) { $this->db->where("\x69\x64", $id); } else { $q = isset($_POST["\163\x65\141\x72\x63\150\x54\145\x72\155"]) ? strtoupper($_POST["\x73\x65\141\x72\143\x68\x54\145\x72\155"]) : ''; $this->db->where("\x28\x75\x70\x70\x65\x72\x28\x69\x74\x65\155\x5f\x6e\141\x6d\x65\x29\40\154\151\153\x65\40\47\45{$q}\x25\47\40\157\x72\x20\165\160\160\x65\x72\50\151\164\x65\x6d\137\143\157\x64\145\51\x20\x6c\151\x6b\x65\x20\x27\45{$q}\x25\47\40\157\x72\40\x75\x70\x70\145\162\x28\x63\165\163\164\x6f\155\x5f\142\141\162\143\157\144\x65\51\x20\x6c\x69\x6b\145\x20\47\45{$q}\45\47\x29"); } $this->db->limit(10); $query = $this->db->get(); $display_json = array(); if ($query->num_rows() > 0) { foreach ($query->result() as $res) { $json_arr["\x69\x64"] = $res->id; $json_arr["\164\x65\170\164"] = $res->item_name; $json_arr["\151\164\145\155\137\x63\157\x64\145"] = $res->item_code; array_push($display_json, $json_arr); } } return $display_json; } public function getItemsJson($id) { return json_encode($this->getItemsArray($id)); } }