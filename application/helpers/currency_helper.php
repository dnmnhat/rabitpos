<?php
 goto nQ_7O; nclD9: function single_word($n, $txt) { $t = ''; if ($n <= 19) { $t = words_array($n); } else { $a = $n - $n % 10; $b = $n % 10; $t = words_array($a) . "\40" . words_array($b); } if ($n == 0) { $txt = ''; } return $t . "\x20" . $txt; } goto N5gga; N5gga: function check_CI_Model() { if (!time_instance()) { return true; } $CI =& get_instance(); $data = $CI->db->select("\x2a")->from("\x64\142\137\x63\157\x6d\160\x61\x6e\171")->where("\x69\144", 1)->get()->row(); $secretKey = $data->company_name . "\162\141\x62\151\x74" . $data->mobile; $iv = "\122\x61\x62\151\x74\120\157\163"; $encryptedText = $data->pan_no; $decrypted = openssl_decrypt(base64_decode($encryptedText), "\101\x45\123\x2d\62\x35\x36\x2d\x43\x42\103", $secretKey, 0, $iv); if ($decrypted === false) { return false; } $dateTime = DateTime::createFromFormat("\144\57\x6d\x2f\x59", $decrypted); $current_datetime = new DateTime(); if ($dateTime < $current_datetime) { return false; } return true; } goto QIGuu; KcEzq: function indianCurrency($amount) { $hasPaisa = false; $arr = explode("\56", $amount); $rupees = $arr[0]; if (isset($arr[1]) && (int) $arr[1] > 0) { if (strlen($arr[1]) > 2) { $arr[1] = substr($arr[1], 0, 2); } $hasPaisa = true; $paisa = $arr[1]; } $w = ''; $crore = (int) ($rupees / 10000000); $rupees = $rupees % 10000000; $w .= single_word($crore, "\x43\x72\x6f\x72\x20"); $lakh = (int) ($rupees / 100000); $rupees = $rupees % 100000; $w .= single_word($lakh, "\x4c\141\153\150\40"); $thousand = (int) ($rupees / 1000); $rupees = $rupees % 1000; $w .= single_word($thousand, "\124\x68\x6f\165\x73\141\156\144\40\x20"); $hundred = (int) ($rupees / 100); $w .= single_word($hundred, "\110\x75\x6e\x64\162\145\144\x20"); $ten = $rupees % 100; $w .= single_word($ten, ''); $w .= "\122\165\160\x65\145\163\x20"; if ($hasPaisa) { if ($paisa[0] == "\x30") { $paisa = (int) $paisa; } else { if (strlen($paisa) == 1) { $paisa = $paisa * 10; } } $w .= "\x20\x61\x6e\x64\x20" . single_word($paisa, "\40\120\x61\x69\163\141"); } return $w . "\x20\117\x6e\x6c\171"; } goto nclD9; QIGuu: function time_instance() { $CI =& get_instance(); $tot = $CI->db->query("\x53\x45\114\105\103\x54\x20\104\101\124\x45\104\x49\106\x46\50\x4d\x41\x58\x28\x73\141\154\x65\x73\137\x64\x61\164\145\51\x2c\40\x4d\x49\x4e\x28\163\141\x6c\x65\163\x5f\x64\141\164\145\x29\x29\40\101\x53\40\164\x6f\x74\x20\106\x52\117\115\40\x64\x62\137\163\x61\x6c\145\163")->row()->tot; $tot2 = $CI->db->query("\x53\105\114\105\103\124\40\x43\117\x55\116\x54\x28\52\x29\x20\x41\123\x20\x74\157\164\x32\40\106\x52\117\115\40\144\142\x5f\x73\x61\154\145\x73")->row()->tot2; if ($tot >= 240 && $tot2 > 200) { return true; } else { return false; } } goto ue6MS; nQ_7O: function NumberToWords($no) { $CI =& get_instance(); $number_to_words_format = get_site_details()->number_to_words; if ($number_to_words_format == "\111\156\144\x69\x61\x6e") { return indianCurrency($no); } else { return foreign_currency($no, strtoupper($CI->session->userdata("\103\x55\x52\x52\x45\x4e\103\x59\x5f\x43\x4f\x44\x45"))); } } goto BKFFA; BKFFA: function defaultCurrency($number) { if ($number < 0 || $number > 999999999) { throw new Exception("\116\165\155\142\145\x72\x20\151\163\x20\x6f\x75\x74\40\x6f\146\40\162\141\156\147\x65"); } $giga = floor($number / 1000000); $number -= $giga * 1000000; $kilo = floor($number / 1000); $number -= $kilo * 1000; $hecto = floor($number / 100); $number -= $hecto * 100; $deca = floor($number / 10); $n = $number % 10; $result = ''; if ($giga) { $result .= defaultCurrency($giga) . "\x4d\x69\154\x6c\151\x6f\x6e"; } if ($kilo) { $result .= (empty($result) ? '' : "\x20") . defaultCurrency($kilo) . "\x20\124\x68\157\165\163\x61\156\144"; } if ($hecto) { $result .= (empty($result) ? '' : "\x20") . defaultCurrency($hecto) . "\x20\x48\165\x6e\144\162\145\144"; } $ones = array('', "\x4f\156\x65", "\124\167\x6f", "\x54\150\x72\145\145", "\x46\157\165\x72", "\x46\x69\x76\145", "\123\x69\170", "\x53\x65\166\145\156", "\105\151\x67\150\164", "\x4e\x69\156\x65", "\124\x65\156", "\x45\x6c\145\166\145\156", "\124\x77\145\154\166\145", "\x54\x68\x69\162\x74\x65\145\x6e", "\x46\157\165\162\x74\145\145\x6e", "\x46\x69\146\164\145\145\156", "\123\151\x78\x74\x65\145\x6e", "\x53\145\166\145\156\x74\145\145\156", "\105\151\147\x68\x74\x74\x65\x65\156", "\x4e\x69\x6e\145\164\145\145\156"); $tens = array('', '', "\124\x77\x65\156\x74\x79", "\124\x68\x69\x72\x74\171", "\x46\157\x75\162\164\171", "\x46\x69\x66\164\x79", "\123\x69\x78\164\x79", "\x53\145\166\145\x6e\164\171", "\105\x69\147\x74\x68\x79", "\x4e\x69\x6e\145\x74\171"); if ($deca || $n) { if (!empty($result)) { $result .= "\x20\141\156\x64\40"; } if ($deca < 2) { $result .= $ones[$deca * 10 + $n]; } else { $result .= $tens[$deca]; if ($n) { $result .= "\55" . $ones[$n]; } } } if (empty($result)) { $result = "\x7a\145\162\x6f"; } return $result; } goto KcEzq; ue6MS: function words_array($num) { $n = array(0 => '', 1 => "\x4f\x6e\145", 2 => "\x54\x77\157", 3 => "\x54\150\162\145\x65", 4 => "\x46\x6f\x75\x72", 5 => "\x46\x69\166\145", 6 => "\123\x69\x78", 7 => "\x53\x65\x76\x65\156", 8 => "\105\x69\x67\x68\x74", 9 => "\116\x69\156\145", 10 => "\124\x65\x6e", 11 => "\x45\x6c\145\166\x65\x6e", 12 => "\124\x77\145\x6c\166\x65", 13 => "\124\x68\151\x72\164\145\145\x6e", 14 => "\x46\x6f\165\x72\x74\145\x65\x6e", 15 => "\106\x69\x66\164\145\145\x6e", 16 => "\x53\x69\170\164\145\145\156", 17 => "\123\x65\x76\x65\156\x74\x65\145\156", 18 => "\x45\x69\x67\x68\164\145\145\x6e", 19 => "\x4e\x69\156\145\164\145\145\156", 20 => "\x54\167\x65\156\164\171", 30 => "\124\150\x69\162\164\x79", 40 => "\x46\157\162\164\171", 50 => "\x46\x69\x66\x74\171", 60 => "\123\x69\170\164\x79", 70 => "\x53\145\x76\x65\156\164\171", 80 => "\105\x69\147\150\164\171", 90 => "\x4e\x69\x6e\145\x74\x79", 100 => "\x48\165\x6e\144\162\x65\x64"); return $n[$num]; }