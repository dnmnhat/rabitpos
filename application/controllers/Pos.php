<?php
 defined("\102\101\123\105\120\x41\x54\x48") or die("\x4e\x6f\x20\x64\151\162\x65\143\x74\x20\x73\x63\162\x69\160\164\40\141\x63\143\145\x73\x73\40\141\154\154\x6f\x77\145\x64"); class Pos extends MY_Controller { public function __construct() { parent::__construct(); $this->load_global(); $this->load->model("\x70\157\163\137\155\x6f\144\145\x6c", "\x70\x6f\163\x5f\155\x6f\x64\145\154"); $this->load->helper("\x73\x6d\x73\x5f\164\x65\x6d\x70\154\x61\x74\x65\x5f\x68\x65\154\x70\x65\162"); } public function is_sms_enabled() { return is_sms_enabled(); } public function index() { $this->permission_check("\x70\x6f\x73"); $data = $this->data; $data["\160\x61\x67\x65\137\164\151\164\x6c\x65"] = "\x50\117\123"; $data["\162\x65\163\165\154\x74"] = $this->get_hold_invoice_list(); $data["\x74\157\x74\137\143\x6f\165\x6e\164"] = $this->get_hold_invoice_count(); $this->load->view("\x70\x6f\163", $data); } public function newcustomer() { $this->form_validation->set_rules("\143\x75\x73\x74\157\155\145\162\x5f\x6e\141\x6d\145", "\x43\165\x73\164\x6f\155\x65\x72\x20\x4e\141\155\x65", "\164\162\151\155\x7c\162\145\x71\x75\x69\x72\145\144"); if ($this->form_validation->run() == TRUE) { $this->load->model("\x63\x75\163\x74\157\x6d\145\x72\163\x5f\155\157\144\145\154"); $result = $this->customers_model->verify_and_save(); $res = array(); $query = $this->db->query("\163\145\154\145\143\x74\40\151\x64\54\143\165\163\x74\x6f\155\x65\162\137\x6e\x61\155\145\40\x66\x72\x6f\155\40\144\142\x5f\x63\x75\x73\164\157\155\x65\162\x73\x20\157\162\144\x65\x72\40\x62\171\x20\151\x64\40\144\x65\163\143\40\154\x69\155\x69\x74\x20\61"); $res["\151\144"] = $query->row()->id; $res["\143\x75\163\164\x6f\155\145\x72\x5f\156\141\x6d\145"] = $query->row()->customer_name; $res["\162\145\x73\165\x6c\x74"] = $result; echo json_encode($res); } else { echo "\x50\x6c\x65\x61\163\145\x20\106\x69\x6c\x6c\40\x43\157\x6d\x70\x75\x6c\x73\157\x72\x79\50\x2a\x20\155\x61\x72\x6b\145\144\51\40\x46\151\x65\154\x64\163\56"; } } public function get_details() { echo $this->pos_model->get_details(); } public function receive_order() { echo $this->pos_model->receive_order(); } public function pos_save_update() { $result = ''; if ($this->input->post("\x63\x6f\155\x6d\x61\156\144") == "\165\160\x64\141\x74\145") { $result = $this->pos_model->pos_save_update(); } else { $result = $this->pos_model->pos_save_update(); $result = $result . "\x3c\x3c\74\x23\x23\x23\x3e\x3e\76" . $this->pos_model->hold_invoice_list(); $q1 = $this->db->query("\123\105\114\105\103\124\40\x2a\x20\106\122\117\115\x20\144\142\137\150\157\x6c\x64"); $data["\x74\157\x74\x5f\x63\157\x75\156\164"] = $q1->num_rows(); $result = $result . "\74\74\x3c\43\x23\x23\76\76\76" . $q1->num_rows(); } echo $result; die; } public function edit($sales_id) { $this->permission_check("\x73\141\154\x65\x73\x5f\x65\x64\x69\164"); $data = $this->data; $data["\x73\x61\x6c\x65\163\x5f\x69\144"] = $sales_id; $data["\x70\141\x67\x65\x5f\164\151\x74\x6c\x65"] = "\120\x4f\x53\40\125\160\x64\141\164\x65"; $data["\162\145\163\165\154\x74"] = $this->get_hold_invoice_list(); $data["\x74\157\164\137\x63\x6f\165\x6e\164"] = $this->get_hold_invoice_count(); $data["\x63\x75\x73\x74\157\155\x65\162\x5f\x69\x64"] = get_sales_details($sales_id)->customer_id; $this->load->view("\160\x6f\163", $data); } public function fetch_sales($sales_id) { $result = $this->pos_model->edit_pos($sales_id); } public function hold_invoice() { echo $this->pos_model->hold_list_save_update(); } public function hold_invoice_list() { $data = array(); $data["\162\x65\x73\165\154\x74"] = $this->get_hold_invoice_list(); $data["\164\x6f\164\x5f\143\x6f\x75\x6e\x74"] = $this->get_hold_invoice_count(); echo json_encode($data); } public function get_hold_invoice_list() { $data = array(); $result = $this->pos_model->hold_invoice_list(); return $result; } public function get_hold_invoice_count() { $q1 = $this->db->query("\123\105\114\x45\103\x54\x20\52\x20\x46\122\x4f\115\x20\x64\142\x5f\x68\157\154\x64"); return $q1->num_rows(); } public function hold_invoice_delete($invoice_id) { $result = $this->pos_model->hold_invoice_delete($invoice_id); echo trim($result); } public function hold_invoice_delete_by_table($invoice_id) { $result = $this->pos_model->hold_invoice_delete_by_table($invoice_id); echo trim($result); } public function hold_invoice_edit() { echo $this->pos_model->hold_invoice_edit(); } public function add_payment_row() { return $this->load->view("\155\157\144\141\154\x73\x5f\x70\x6f\x73\x5f\x70\x61\171\x6d\145\156\x74\57\x6d\x6f\x64\x61\x6c\x5f\x70\x61\x79\x6d\145\x6e\x74\163\x5f\155\165\154\x74\x69\x5f\x73\x75\x62"); } public function print_invoice_pos($sales_id) { if (!$this->permissions("\x73\x61\154\145\x73\x5f\x61\x64\x64") && !$this->permissions("\x73\x61\x6c\145\163\x5f\145\144\x69\x74")) { $this->show_access_denied_page(); } $data = $this->data; $data["\160\x61\x67\x65\137\164\151\x74\154\145"] = $this->lang->line("\x73\x61\x6c\145\163\x5f\151\156\166\157\x69\143\x65"); $data = array_merge($data, array("\163\141\x6c\145\163\x5f\151\144" => $sales_id)); $this->load->view("\163\141\x6c\55\151\x6e\x76\157\x69\143\x65\x2d\160\157\x73", $data); } public function print_bill_order($sales_id) { if (!$this->permissions("\163\x61\x6c\145\163\137\x61\144\x64") && !$this->permissions("\x73\x61\x6c\145\163\x5f\x65\x64\151\x74")) { $this->show_access_denied_page(); } $data = $this->data; $data["\x70\141\147\x65\137\164\x69\x74\x6c\145"] = "\xc4\220\341\272\xb7\164\x20\x6d\303\xb3\156"; $data = array_merge($data, array("\163\141\x6c\x65\x73\137\x69\144" => $sales_id)); $this->load->view("\163\x61\154\x2d\x62\x69\154\154\x2d\x6f\x72\x64\x65\162", $data); } public function get_item_details() { echo $this->pos_model->get_item_details($this->input->post("\x69\164\145\155\x5f\x69\x64")); } public function print_qr($data = '') { $this->load->model("\x51\162\x63\157\x64\x65\x5f\x6d\x6f\144\145\x6c", "\161\x72"); return $this->qr->qr_image($data); die; $data = trim($data); $data = base64_decode(str_replace("\x2d", "\x3d", str_replace("\x5f", "\x2f", $data))); $options = new QROptions(array()); return !empty($data) ? "\74\x69\155\x67\40\163\x72\x63\x3d\x22" . (new QRCode($options))->render($data) . "\42\x20\141\x6c\164\75\42\121\x52\x20\103\157\x64\145\42\x20\57\76" : ''; } }